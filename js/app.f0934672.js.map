{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/assets/circles.png","webpack:///./src/App.vue?e488","webpack:///src/App.vue","webpack:///./src/App.vue?1160","webpack:///./src/App.vue?bff9","webpack:///./src/main.js","webpack:///./src/App.vue?dbb4","webpack:///./src/App.vue?8732","webpack:///./src/assets/spaces.png"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","app","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","Appvue_type_template_id_3a05e3e8_scoped_true_render","_vm","this","_h","$createElement","_c","_self","attrs","id","staticClass","md-waterfall","md-mode","_v","md-active-step","step","md-vertical","md-linear","on","update:mdActiveStep","$event","md-label","md-description","click","next","md-error","$v","info","$dirty","$invalid","md-done","novalidate","submit","class","md-invalid","required","model","callback","$$v","$set","trim","expression","shortDescription","md-autogrow","maxlength","$params","maxLength","max","_e","_s","description","type","_l","options","option","_id","pick","values","credits","min","minValue","maxValue","unit","phase","learningYear","quarter","cluster","filter","includes","matter","objectivesSummary","methods","methodsSummary","assessments","assessmentsSummary","studyMaterialsRequired","studyMaterialsUsed","productsLearned","productsAsked","scopedSlots","_u","fn","ref","item","researchMethodsLearned","researchMethodsAsked","md-with-hover","src","image","width","height","alt","target","rel","href","strategy","md-alignment","classification","competencies","toggle","circles","spaces","number","complexityLevels","levelComplexity","levelIndependence","people","md-sort","md-sort-order","md-fixed-header","md-sort-by","teachers","coordinators","peopleSearched","md-clearable","placeholder","input","searchInPeople","peopleSearch","md-active","showDialog","md-title","md-content","md-confirm-text","md-cancel-text","update:mdActive","md-confirm","onConfirm","staticRenderFns","alphaSort","carddb","moduleTypes","programPhases","learningYears","quarters","products","independenceLevels","cards","x","map","_ref","image_width","image_height","apiUrl","Appvue_type_script_lang_js_","components","language","defaultLanguage","person","competency","method","computed","validations","_this$info","intro","validators","created","_this","resources","sort","a","b","asc","sideEffect","phaseMap","foundation","profiling","minor","graduation","Promise","all","_ref2","_ref2$map","lodash","_ref2$sideEffect","fetch","join","then","res","json","attempt","lang","find","_ref3","list","position","indexOf","term","toLowerCase","ev","curr","_next","preventDefault","$touch","_this2","uri","_this$$data","$data","body","periods","parseInt","content","hoorcollege","werkgroep","level","program","faculty","headers","Content-Type","JSON","stringify","alert","location","reload","src_Appvue_type_script_lang_js_","component","componentNormalizer","__file","App","Vue","config","productionTip","use","VueMaterial","Vuelidate","render","h","$mount","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_style_index_0_id_3a05e3e8_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_style_index_0_id_3a05e3e8_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0___default","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_style_index_1_lang_css___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_style_index_1_lang_css___WEBPACK_IMPORTED_MODULE_0___default"],"mappings":"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","file":"js/app.f0934672.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/study-guide-frontend-input/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","module.exports = __webpack_public_path__ + \"img/circles.a9dbb54a.png\";","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('div',{staticClass:\"page-container\"},[_c('md-app',{attrs:{\"md-waterfall\":\"\",\"md-mode\":\"overlap\"}},[_c('md-app-toolbar',{staticClass:\"md-large\"},[_c('div',{staticClass:\"md-toolbar-row\"},[_c('h1',{staticClass:\"md-title\"},[_vm._v(\"CMD Monitor\")])])]),_c('md-app-content',[_c('md-steppers',{attrs:{\"md-active-step\":_vm.step,\"md-vertical\":\"\",\"md-linear\":\"\"},on:{\"update:mdActiveStep\":function($event){_vm.step=$event}}},[_c('md-step',{attrs:{\"id\":\"intro\",\"md-label\":\"Introductie\",\"md-description\":\"Introductie van de monitor\"}},[_c('p',[_vm._v(\"\\n              In deze monitor vragen vragen we je om informatie over een\\n              module in te vullen. Deze informatie kunnen we later gebruiken\\n              om het curriculum van volgend jaar te visualiseren, maar ook\\n              voor in de studiegids.\\n            \")]),_c('p',[_vm._v(\"\\n              Deze monitor is bedoelt voor coördinatoren om modules, zoals een\\n              vak, in te vullen. Deze monitor is \"),_c('strong',[_vm._v(\"niet\")]),_vm._v(\" bedoelt\\n              voor modules waar studenten zelfstandig bepalen wat ze leren\\n              (zoals SLC of een stage) of modules bestaand uit weer andere\\n              modules (zoals een minor of een keuze semester).\\n            \")]),_c('md-button',{staticClass:\"md-dense md-raised md-primary\",on:{\"click\":function($event){_vm.next($event, 'intro', 'info')}}},[_vm._v(\"\\n              Begin\\n            \")])],1),_c('md-step',{attrs:{\"id\":\"info\",\"md-label\":\"Informatie\",\"md-description\":\"Informatie over de module\",\"md-error\":_vm.$v.info.$dirty && _vm.$v.info.$invalid ? 'Informatie mist' : '',\"md-done\":!_vm.$v.info.$invalid}},[_c('p',[_vm._v(\"\\n              In dit onderdeel van de monitor vragen we je globale informatie\\n              over de module in te vullen. \"),_c('br'),_c('em',[_vm._v(\"\\n                Vul geen groepen van vakken in, zoals bijvoorbeeld een minor\\n                of een keuzesemester.\\n              \")])]),_c('form',{attrs:{\"novalidate\":\"\"},on:{\"submit\":function($event){_vm.next($event, 'info', 'matter')}}},[_c('md-field',{class:{\n                  'md-invalid': _vm.$v.info.name.$dirty && _vm.$v.info.name.$invalid\n                }},[_c('label',[_vm._v(\"Naam\")]),_c('md-input',{attrs:{\"required\":\"\"},model:{value:(_vm.$v.info.name.$model),callback:function ($$v) {_vm.$set(_vm.$v.info.name, \"$model\", (typeof $$v === 'string'? $$v.trim(): $$v))},expression:\"$v.info.name.$model\"}}),_c('span',{staticClass:\"md-error\"},[_vm._v(\"Dit veld is verplicht\")])],1),_c('p',{staticClass:\"help\"},[_vm._v(\"\\n                Wat is de naam van de module? Bijvoorbeeld,\\n                \"),_c('samp',[_vm._v(\"Design Ethics\")]),_vm._v(\".\\n              \")]),_c('md-field',{class:{\n                  'md-invalid':\n                    _vm.$v.info.shortDescription.$dirty &&\n                    _vm.$v.info.shortDescription.$invalid\n                }},[_c('label',[_vm._v(\"Korte beschrijving\")]),_c('md-textarea',{attrs:{\"md-autogrow\":\"\",\"required\":\"\",\"maxlength\":_vm.$v.info.shortDescription.$params.maxLength.max},model:{value:(_vm.$v.info.shortDescription.$model),callback:function ($$v) {_vm.$set(_vm.$v.info.shortDescription, \"$model\", (typeof $$v === 'string'? $$v.trim(): $$v))},expression:\"$v.info.shortDescription.$model\"}}),(!_vm.$v.info.shortDescription.required)?_c('span',{staticClass:\"md-error\"},[_vm._v(\"\\n                  Dit veld is verplicht\\n                \")]):_vm._e(),(!_vm.$v.info.shortDescription.maxLength)?_c('span',{staticClass:\"md-error\"},[_vm._v(\"\\n                  Dit veld is te lang (max.\\n                  \"+_vm._s(_vm.$v.info.shortDescription.$params.maxLength.max)+\"\\n                  karakters)\\n                \")]):_vm._e()],1),_c('p',{staticClass:\"help\"},[_vm._v(\"\\n                Beschrijf de module in één zin. Bijvoorbeeld,\\n                \"),_c('samp',[_vm._v(\"Design ethics is a course that allows you to integrate\\n                  ethical thinking into your design practice.\\n                \")])]),_c('md-field',{class:{\n                  'md-invalid':\n                    _vm.$v.info.description.$dirty && _vm.$v.info.description.$invalid\n                }},[_c('label',[_vm._v(\"Lange beschrijving\")]),_c('md-textarea',{attrs:{\"md-autogrow\":\"\",\"required\":\"\",\"maxlength\":_vm.$v.info.description.$params.maxLength.max},model:{value:(_vm.$v.info.description.$model),callback:function ($$v) {_vm.$set(_vm.$v.info.description, \"$model\", (typeof $$v === 'string'? $$v.trim(): $$v))},expression:\"$v.info.description.$model\"}}),(!_vm.$v.info.description.required)?_c('span',{staticClass:\"md-error\"},[_vm._v(\"\\n                  Dit veld is verplicht\\n                \")]):_vm._e(),(!_vm.$v.info.description.maxLength)?_c('span',{staticClass:\"md-error\"},[_vm._v(\"\\n                  Dit veld is te lang (max.\\n                  \"+_vm._s(_vm.$v.info.description.$params.maxLength.max)+\" karakters)\\n                \")]):_vm._e()],1),_c('p',{staticClass:\"help\"},[_vm._v(\"Beschrijf de module in twee tot vier alineas\")]),_c('div',{staticClass:\"lab-fake-field\",class:{\n                  'md-invalid': _vm.$v.info.type.$dirty && _vm.$v.info.type.$invalid\n                }},[_c('h2',{staticClass:\"lab-fake-label lab-fake-label-required\"},[_vm._v(\"Type\")]),_c('p',{staticClass:\"help\"},[_vm._v(\"Wat is het type van de module?\")]),_vm._l((_vm.options.type),function(option){return _c('md-radio',{key:option._id,attrs:{\"value\":option._id},model:{value:(_vm.$v.info.type.$model),callback:function ($$v) {_vm.$set(_vm.$v.info.type, \"$model\", $$v)},expression:\"$v.info.type.$model\"}},[_vm._v(\"\\n                  \"+_vm._s(_vm.pick(option.values).value)+\"\\n                \")])}),(_vm.$v.info.type.$dirty && !_vm.$v.info.type.required)?_c('p',{staticClass:\"lab-fake-error\"},[_vm._v(\"\\n                  Dit veld is verplicht\\n                \")]):_vm._e()],2),_c('md-field',{class:{\n                  'md-invalid':\n                    _vm.$v.info.credits.$dirty && _vm.$v.info.credits.$invalid\n                }},[_c('label',[_vm._v(\"Studiepunten (ECTS)\")]),_c('md-input',{attrs:{\"min\":_vm.$v.info.credits.$params.minValue.min,\"max\":_vm.$v.info.credits.$params.maxValue.max,\"type\":\"number\",\"required\":\"\"},model:{value:(_vm.$v.info.credits.$model),callback:function ($$v) {_vm.$set(_vm.$v.info.credits, \"$model\", $$v)},expression:\"$v.info.credits.$model\"}}),(!_vm.$v.info.credits.required)?_c('span',{staticClass:\"md-error\"},[_vm._v(\"\\n                  Dit veld is verplicht\\n                \")]):_vm._e(),(!_vm.$v.info.credits.minValue)?_c('span',{staticClass:\"md-error\"},[_vm._v(\"\\n                  Dit veld is te laag (min.\\n                  \"+_vm._s(_vm.$v.info.credits.$params.minValue.min)+\")\\n                \")]):_vm._e(),(!_vm.$v.info.credits.maxValue)?_c('span',{staticClass:\"md-error\"},[_vm._v(\"\\n                  Dit veld is te hoog (max.\\n                  \"+_vm._s(_vm.$v.info.credits.$params.maxValue.max)+\")\\n                \")]):_vm._e()],1),_c('p',{staticClass:\"help\"},[_vm._v(\"\\n                Hoeveel studiepunten staan voor \"+_vm._s(_vm.unit)+\"?\\n                \"),(_vm.info.type == 'course')?_c('span',[_vm._v(\"\\n                  Een vak is doorgaans\\n                  \"),_c('strong',{on:{\"click\":function($event){_vm.info.credits = 3}}},[_vm._v(\"3 punten\")]),_vm._v(\".\\n                \")]):_vm._e(),(_vm.info.type == 'project')?_c('span',[_vm._v(\"\\n                  Een project is doorgaans\\n                  \"),_c('strong',{on:{\"click\":function($event){_vm.info.credits = 5}}},[_vm._v(\"5 punten\")]),_vm._v(\".\\n                \")]):_vm._e()]),_c('div',{staticClass:\"lab-fake-field\",class:{\n                  'md-invalid': _vm.$v.info.phase.$dirty && _vm.$v.info.phase.$invalid\n                }},[_c('h2',{staticClass:\"lab-fake-label lab-fake-label-required\"},[_vm._v(\"Fase\")]),_c('p',{staticClass:\"help\"},[_vm._v(\"In welk fase wordt \"+_vm._s(_vm.unit)+\" aangeboden?\")]),_vm._l((_vm.options.phase),function(option){return _c('md-radio',{key:option._id,attrs:{\"value\":option._id},model:{value:(_vm.$v.info.phase.$model),callback:function ($$v) {_vm.$set(_vm.$v.info.phase, \"$model\", $$v)},expression:\"$v.info.phase.$model\"}},[_vm._v(\"\\n                  \"+_vm._s(_vm.pick(option.values).value)+\"\\n                \")])}),(_vm.$v.info.phase.$dirty && !_vm.$v.info.phase.required)?_c('p',{staticClass:\"lab-fake-error\"},[_vm._v(\"\\n                  Dit veld is verplicht\\n                \")]):_vm._e()],2),_c('div',{staticClass:\"lab-fake-field\",class:{\n                  'md-invalid':\n                    _vm.$v.info.learningYear.$dirty &&\n                    _vm.$v.info.learningYear.$invalid\n                }},[_c('h2',{staticClass:\"lab-fake-label lab-fake-label-required\"},[_vm._v(\"\\n                  Leerjaar\\n                \")]),_c('p',{staticClass:\"help\"},[_vm._v(\"\\n                  In welk leerjaar wordt \"+_vm._s(_vm.unit)+\" aangeboden?\\n                \")]),_vm._l((_vm.options.learningYear),function(option){return _c('md-radio',{key:option._id,attrs:{\"value\":option._id},model:{value:(_vm.$v.info.learningYear.$model),callback:function ($$v) {_vm.$set(_vm.$v.info.learningYear, \"$model\", $$v)},expression:\"$v.info.learningYear.$model\"}},[_vm._v(\"\\n                  \"+_vm._s(_vm.pick(option.values).value)+\"\\n                \")])}),(\n                    _vm.$v.info.learningYear.$dirty &&\n                      !_vm.$v.info.learningYear.required\n                  )?_c('p',{staticClass:\"lab-fake-error\"},[_vm._v(\"\\n                  Dit veld is verplicht\\n                \")]):_vm._e()],2),_c('div',{staticClass:\"lab-fake-field\",class:{\n                  'md-invalid':\n                    _vm.$v.info.quarter.$dirty && _vm.$v.info.quarter.$invalid\n                }},[_c('h2',{staticClass:\"lab-fake-label lab-fake-label-required\"},[_vm._v(\"\\n                  Kwartaal\\n                \")]),_c('p',{staticClass:\"help\"},[_vm._v(\"\\n                  In welk kwartaal wordt \"+_vm._s(_vm.unit)+\" aangeboden? Als\\n                  \"+_vm._s(_vm.unit)+\" in meerdere kwartalen wordt aangeboden, of een\\n                  semester overbrugt, maak dan meerdere keuzes.\\n                \")]),_vm._l((_vm.options.quarter),function(option){return _c('md-checkbox',{key:option._id,attrs:{\"value\":option._id},model:{value:(_vm.$v.info.quarter.$model),callback:function ($$v) {_vm.$set(_vm.$v.info.quarter, \"$model\", $$v)},expression:\"$v.info.quarter.$model\"}},[_vm._v(\"\\n                  \"+_vm._s(_vm.pick(option.values).value)+\"\\n                \")])}),(_vm.$v.info.quarter.$dirty && !_vm.$v.info.quarter.required)?_c('p',{staticClass:\"lab-fake-error\"},[_vm._v(\"\\n                  Dit veld is verplicht\\n                \")]):_vm._e()],2),(_vm.info.phase == 'profiling' || _vm.info.phase == 'minor')?_c('div',{staticClass:\"lab-fake-field\",class:{\n                  'md-invalid':\n                    _vm.$v.info.cluster.$dirty && _vm.$v.info.cluster.$invalid\n                }},[_c('h2',{staticClass:\"lab-fake-label lab-fake-label-required\"},[(_vm.info.phase == 'profiling')?_c('span',[_vm._v(\"Project\")]):_vm._e(),(_vm.info.phase == 'minor')?_c('span',[_vm._v(\"Minor\")]):_vm._e()]),_c('p',{staticClass:\"help\"},[_vm._v(\"Bij welke groep hoort \"+_vm._s(_vm.unit)+\"?\")]),_vm._l((_vm.options.cluster.filter(function (o) { return o.phase.includes(_vm.info.phase); }\n                  )),function(option){return _c('md-checkbox',{key:option._id,staticClass:\"lab-check-vertical\",attrs:{\"value\":option._id},model:{value:(_vm.$v.info.cluster.$model),callback:function ($$v) {_vm.$set(_vm.$v.info.cluster, \"$model\", $$v)},expression:\"$v.info.cluster.$model\"}},[_vm._v(\"\\n                  \"+_vm._s(_vm.pick(option.name).value)+\"\\n                \")])}),(_vm.$v.info.cluster.$dirty && !_vm.$v.info.cluster.required)?_c('p',{staticClass:\"lab-fake-error\"},[_vm._v(\"\\n                  Dit veld is verplicht\\n                \")]):_vm._e()],2):_vm._e(),(_vm.$v.info.$dirty && _vm.$v.info.$invalid)?_c('p',{staticClass:\"lab-fake-error\"},[_vm._v(\"\\n                Er mist nog informatie.\\n              \")]):_vm._e(),_c('md-button',{staticClass:\"md-dense md-raised md-primary\",attrs:{\"type\":\"submit\"}},[_vm._v(\"\\n                Verder\\n              \")])],1)]),_c('md-step',{attrs:{\"id\":\"matter\",\"md-label\":\"Materie\",\"md-description\":\"Wat studenten leren, en hoe\",\"md-error\":_vm.$v.matter.$dirty && _vm.$v.matter.$invalid ? 'Informatie mist' : '',\"md-done\":!_vm.$v.matter.$invalid}},[_c('p',[_vm._v(\"\\n              In dit onderdeel van de monitor vragen we je naar de inhoud van\\n              \"+_vm._s(_vm.unit)+\". Wat is de stof? Hoe wordt er gewerkt?\\n            \")]),_c('form',{attrs:{\"novalidate\":\"\"},on:{\"submit\":function($event){_vm.next($event, 'matter', 'classification')}}},[_c('md-field',{class:{\n                  'md-invalid':\n                    _vm.$v.matter.objectivesSummary.$dirty &&\n                    _vm.$v.matter.objectivesSummary.$invalid\n                }},[_c('label',[_vm._v(\"Leerdoelen\")]),_c('md-textarea',{attrs:{\"maxlength\":_vm.$v.matter.objectivesSummary.$params.maxLength.max,\"md-autogrow\":\"\",\"required\":\"\"},model:{value:(_vm.$v.matter.objectivesSummary.$model),callback:function ($$v) {_vm.$set(_vm.$v.matter.objectivesSummary, \"$model\", (typeof $$v === 'string'? $$v.trim(): $$v))},expression:\"$v.matter.objectivesSummary.$model\"}}),(!_vm.$v.matter.objectivesSummary.required)?_c('span',{staticClass:\"md-error\"},[_vm._v(\"Dit veld is verplicht\")]):_vm._e(),(!_vm.$v.matter.objectivesSummary.maxLength)?_c('span',{staticClass:\"md-error\"},[_vm._v(\"Dit veld is te lang (max.\\n                  \"+_vm._s(_vm.$v.matter.objectivesSummary.$params.maxLength.max)+\"\\n                  karakters)\")]):_vm._e()],1),_c('p',{staticClass:\"help\"},[_vm._v(\"\\n                Beschrijf wat de student leert. Vul meerdere leerdoelen in.\\n                Gebruik streepjes en enters. Bijvoorbeeld,\\n                \"),_c('samp',[_vm._v(\"- You learn to be aware of the ethical issues involved in\\n                  design and designing\")])]),_c('div',{staticClass:\"lab-fake-field\",class:{\n                  'md-invalid':\n                    _vm.$v.matter.methods.$dirty && _vm.$v.matter.methods.$invalid\n                }},[_c('h2',{staticClass:\"lab-fake-label lab-fake-label-required\"},[_vm._v(\"\\n                  Werkvormen\\n                \")]),_c('p',{staticClass:\"help\"},[_vm._v(\"\\n                  Geef aan welke werkvormen worden gebruikt binnen \"+_vm._s(_vm.unit)+\".\\n                \")]),_vm._l((_vm.options.method),function(option){return _c('md-checkbox',{key:option._id,staticClass:\"lab-check-vertical\",attrs:{\"value\":option._id},model:{value:(_vm.$v.matter.methods.$model),callback:function ($$v) {_vm.$set(_vm.$v.matter.methods, \"$model\", $$v)},expression:\"$v.matter.methods.$model\"}},[_c('strong',[_vm._v(_vm._s(_vm.pick(option.values).value))]),(_vm.pick(option.values).description)?_c('span',[_vm._v(\"\\n                    (\"+_vm._s(_vm.pick(option.values).description)+\")\\n                  \")]):_vm._e()])}),(\n                    _vm.$v.matter.methods.$dirty && !_vm.$v.matter.methods.required\n                  )?_c('p',{staticClass:\"lab-fake-error\"},[_vm._v(\"\\n                  Dit veld is verplicht\\n                \")]):_vm._e()],2),_c('md-field',{class:{\n                  'md-invalid':\n                    _vm.$v.matter.methodsSummary.$dirty &&\n                    _vm.$v.matter.methodsSummary.$invalid\n                }},[_c('label',[_vm._v(\"Beschrijving van werkvormen\")]),_c('md-textarea',{attrs:{\"md-autogrow\":\"\",\"required\":\"\",\"maxlength\":_vm.$v.matter.methodsSummary.$params.maxLength.max},model:{value:(_vm.$v.matter.methodsSummary.$model),callback:function ($$v) {_vm.$set(_vm.$v.matter.methodsSummary, \"$model\", (typeof $$v === 'string'? $$v.trim(): $$v))},expression:\"$v.matter.methodsSummary.$model\"}}),(!_vm.$v.matter.methodsSummary.required)?_c('span',{staticClass:\"md-error\"},[_vm._v(\"Dit veld is verplicht\")]):_vm._e(),(!_vm.$v.matter.methodsSummary.maxLength)?_c('span',{staticClass:\"md-error\"},[_vm._v(\"Dit veld is te lang (max.\\n                  \"+_vm._s(_vm.$v.matter.methodsSummary.$params.maxLength.max)+\"\\n                  karakters)\")]):_vm._e()],1),_c('p',{staticClass:\"help\"},[_vm._v(\"\\n                Beschrijf in twee tot vier alineas hoe er binnen \"+_vm._s(_vm.unit)+\" en\\n                tijdens de werkvormen gewerkt wordt.\\n              \")]),_c('div',{staticClass:\"lab-fake-field\",class:{\n                  'md-invalid':\n                    _vm.$v.matter.assessments.$dirty &&\n                    _vm.$v.matter.assessments.$invalid\n                }},[_c('h2',{staticClass:\"lab-fake-label lab-fake-label-required\"},[_vm._v(\"\\n                  Toetsvormen\\n                \")]),_c('p',{staticClass:\"help\"},[_vm._v(\"\\n                  Geef aan welke toetsvormen worden gebruikt binnen\\n                  \"+_vm._s(_vm.unit)+\".\\n                \")]),_vm._l((_vm.options.assessments),function(option){return _c('md-checkbox',{key:option._id,staticClass:\"lab-check-vertical\",attrs:{\"value\":option._id},model:{value:(_vm.$v.matter.assessments.$model),callback:function ($$v) {_vm.$set(_vm.$v.matter.assessments, \"$model\", $$v)},expression:\"$v.matter.assessments.$model\"}},[_c('strong',[_vm._v(_vm._s(_vm.pick(option.values).value))]),(_vm.pick(option.values).description)?_c('span',[_vm._v(\"\\n                    (\"+_vm._s(_vm.pick(option.values).description)+\")\\n                  \")]):_vm._e()])}),(\n                    _vm.$v.matter.assessments.$dirty &&\n                      !_vm.$v.matter.assessments.required\n                  )?_c('p',{staticClass:\"lab-fake-error\"},[_vm._v(\"\\n                  Dit veld is verplicht\\n                \")]):_vm._e()],2),_c('md-field',{class:{\n                  'md-invalid':\n                    _vm.$v.matter.assessmentsSummary.$dirty &&\n                    _vm.$v.matter.assessmentsSummary.$invalid\n                }},[_c('label',[_vm._v(\"Beschrijving van toetsvormen\")]),_c('md-textarea',{attrs:{\"md-autogrow\":\"\",\"required\":\"\",\"maxlength\":_vm.$v.matter.assessmentsSummary.$params.maxLength.max},model:{value:(_vm.$v.matter.assessmentsSummary.$model),callback:function ($$v) {_vm.$set(_vm.$v.matter.assessmentsSummary, \"$model\", (typeof $$v === 'string'? $$v.trim(): $$v))},expression:\"$v.matter.assessmentsSummary.$model\"}}),(!_vm.$v.matter.assessmentsSummary.required)?_c('span',{staticClass:\"md-error\"},[_vm._v(\"Dit veld is verplicht\")]):_vm._e(),(!_vm.$v.matter.assessmentsSummary.maxLength)?_c('span',{staticClass:\"md-error\"},[_vm._v(\"Dit veld is te lang (max.\\n                  \"+_vm._s(_vm.$v.matter.assessmentsSummary.$params.maxLength.max)+\"\\n                  karakters)\")]):_vm._e()],1),_c('p',{staticClass:\"help\"},[_vm._v(\"\\n                Beschrijf in twee tot vier alineas hoe er binnen\\n                \"+_vm._s(_vm.unit)+\" getoetst wordt.\\n              \")]),_c('md-field',{class:{\n                  'md-invalid':\n                    _vm.$v.matter.studyMaterialsRequired.$dirty &&\n                    _vm.$v.matter.studyMaterialsRequired.$invalid\n                }},[_c('label',[_vm._v(\"Studiemateriaal verplicht\")]),_c('md-textarea',{attrs:{\"md-autogrow\":\"\",\"maxlength\":_vm.$v.matter.studyMaterialsRequired.$params.maxLength.max},model:{value:(_vm.$v.matter.studyMaterialsRequired.$model),callback:function ($$v) {_vm.$set(_vm.$v.matter.studyMaterialsRequired, \"$model\", (typeof $$v === 'string'? $$v.trim(): $$v))},expression:\"$v.matter.studyMaterialsRequired.$model\"}}),(!_vm.$v.matter.studyMaterialsRequired.maxLength)?_c('span',{staticClass:\"md-error\"},[_vm._v(\"\\n                  Dit veld is te lang (max.\\n                  \"+_vm._s(_vm.$v.matter.studyMaterialsRequired.$params.maxLength.max)+\"\\n                  karakters)\\n                \")]):_vm._e()],1),_c('p',{staticClass:\"help\"},[_vm._v(\"\\n                Vul de verplichte studie materialen in die studenten zelf\\n                moeten aanschaffen voor \"+_vm._s(_vm.unit)+\". Gebruik streepjes en\\n                enters. Bijvoorbeeld,\\n                \"),_c('samp',[_vm._v(\"- Fink, L. Dee. Creating Significant Learning Experiences.\\n                  Jossey-Bass, 2013.\")])]),_c('md-field',{class:{\n                  'md-invalid':\n                    _vm.$v.matter.studyMaterialsUsed.$dirty &&\n                    _vm.$v.matter.studyMaterialsUsed.$invalid\n                }},[_c('label',[_vm._v(\"Studiemateriaal specifiek\")]),_c('md-textarea',{attrs:{\"md-autogrow\":\"\",\"maxlength\":_vm.$v.matter.studyMaterialsUsed.$params.maxLength.max},model:{value:(_vm.$v.matter.studyMaterialsUsed.$model),callback:function ($$v) {_vm.$set(_vm.$v.matter.studyMaterialsUsed, \"$model\", (typeof $$v === 'string'? $$v.trim(): $$v))},expression:\"$v.matter.studyMaterialsUsed.$model\"}}),(!_vm.$v.matter.studyMaterialsUsed.maxLength)?_c('span',{staticClass:\"md-error\"},[_vm._v(\"\\n                  Dit veld is te lang (max.\\n                  \"+_vm._s(_vm.$v.matter.studyMaterialsUsed.$params.maxLength.max)+\"\\n                  karakters)\\n                \")]):_vm._e()],1),_c('p',{staticClass:\"help\"},[_vm._v(\"\\n                Vul de specifieke studie materialen in die gebruikt worden\\n                binnen \"+_vm._s(_vm.unit)+\". Denk aan artikelen, video’s, tutorial’s,\\n                &c. Gebruik streepjes en enters. Bijvoorbeeld,\\n                \"),_c('samp',[_vm._v(\"- Bostock, M. ‘Introduction to asynchronous iteration’.\\n                  2018.\")])]),_c('div',{staticClass:\"lab-fake-field\",class:{\n                  'md-invalid':\n                    (_vm.$v.matter.productsLearned.$dirty &&\n                      _vm.$v.matter.productsLearned.$invalid) ||\n                    (_vm.$v.matter.productsAsked.$dirty &&\n                      _vm.$v.matter.productsAsked.$invalid)\n                }},[_c('h2',{staticClass:\"lab-fake-label\"},[_vm._v(\"Beroepsproducten\")]),_c('p',{staticClass:\"help\"},[_vm._v(\"\\n                  Geef aan welke beroepsproducten er worden gebruikt en\\n                  getoetst binnen \"+_vm._s(_vm.unit)+\".\\n                \")]),_c('md-table',{scopedSlots:_vm._u([{key:\"md-table-row\",fn:function(ref){\n                var item = ref.item;\nreturn _c('md-table-row',{},[_c('md-table-cell',{attrs:{\"md-label\":\"Product\"}},[_vm._v(\"\\n                      \"+_vm._s(_vm.pick(item.values).value)+\"\\n                    \")]),_c('md-table-cell',{attrs:{\"md-label\":\"Gebruikt\"}},[_c('md-checkbox',{staticClass:\"lab-check-no-margin\",attrs:{\"value\":item._id},model:{value:(_vm.$v.matter.productsLearned.$model),callback:function ($$v) {_vm.$set(_vm.$v.matter.productsLearned, \"$model\", $$v)},expression:\"$v.matter.productsLearned.$model\"}})],1),_c('md-table-cell',{attrs:{\"md-label\":\"Getoetst\"}},[_c('md-checkbox',{staticClass:\"lab-check-no-margin\",attrs:{\"value\":item._id},model:{value:(_vm.$v.matter.productsAsked.$model),callback:function ($$v) {_vm.$set(_vm.$v.matter.productsAsked, \"$model\", $$v)},expression:\"$v.matter.productsAsked.$model\"}})],1)],1)}}]),model:{value:(_vm.options.products),callback:function ($$v) {_vm.$set(_vm.options, \"products\", $$v)},expression:\"options.products\"}})],1),_c('div',{staticClass:\"lab-fake-field\",class:{\n                  'md-invalid':\n                    (_vm.$v.matter.researchMethodsLearned.$dirty &&\n                      _vm.$v.matter.researchMethodsLearned.$invalid) ||\n                    (_vm.$v.matter.researchMethodsAsked.$dirty &&\n                      _vm.$v.matter.researchMethodsAsked.$invalid)\n                }},[_c('h2',{staticClass:\"lab-fake-label lab-fake-label-required\"},[_vm._v(\"\\n                  Onderzoeksmethoden\\n                \")]),_c('p',{staticClass:\"help\"},[_vm._v(\"\\n                  Geef aan welke onderzoeksmethoden er worden gebruikt en\\n                  getoetst binnen \"+_vm._s(_vm.unit)+\".\\n                \")]),_c('div',{staticClass:\"lab-methods\"},_vm._l((_vm.options.cards),function(option){return _c('md-card',{key:option.id,staticClass:\"lab-method\",attrs:{\"md-with-hover\":\"\"}},[_c('md-card-media',[_c('img',{staticClass:\"lab-method-cover\",attrs:{\"src\":'http://www.cmdmethods.nl/' + option.image,\"width\":option.width,\"height\":option.height,\"alt\":\"\"}})]),_c('md-card-header',[_c('div',{staticClass:\"md-title\"},[_c('a',{attrs:{\"target\":\"_blank\",\"rel\":\"noopener noreferrer\",\"href\":'http://www.cmdmethods.nl/cards/' +\n                              option.strategy +\n                              '/' +\n                              option.id}},[_vm._v(\"\\n                          \"+_vm._s(option.name)+\"\\n                        \")])])]),_c('md-card-actions',{staticClass:\"lab-method-checks\",attrs:{\"md-alignment\":\"space-between\"}},[_c('md-checkbox',{staticClass:\"lab-method-check\",attrs:{\"value\":option.id},model:{value:(_vm.$v.matter.researchMethodsLearned.$model),callback:function ($$v) {_vm.$set(_vm.$v.matter.researchMethodsLearned, \"$model\", $$v)},expression:\"$v.matter.researchMethodsLearned.$model\"}},[_vm._v(\"\\n                        Gebruikt\\n                      \")]),_c('md-checkbox',{staticClass:\"lab-method-check\",attrs:{\"value\":option.id},model:{value:(_vm.$v.matter.researchMethodsAsked.$model),callback:function ($$v) {_vm.$set(_vm.$v.matter.researchMethodsAsked, \"$model\", $$v)},expression:\"$v.matter.researchMethodsAsked.$model\"}},[_vm._v(\"\\n                        Getoetst\\n                      \")])],1)],1)}),1),(\n                    (_vm.$v.matter.researchMethodsLearned.$dirty &&\n                      _vm.$v.matter.researchMethodsLearned.$invalid) ||\n                      (_vm.$v.matter.researchMethodsAsked.$dirty &&\n                        _vm.$v.matter.researchMethodsAsked.$invalid)\n                  )?_c('span',{staticClass:\"md-error\"},[_vm._v(\"Dit veld is verplicht\")]):_vm._e()]),(_vm.$v.matter.$dirty && _vm.$v.matter.$invalid)?_c('p',{staticClass:\"lab-fake-error\"},[_vm._v(\"\\n                Er mist nog informatie.\\n              \")]):_vm._e(),_c('md-button',{staticClass:\"md-dense md-raised md-primary\",attrs:{\"type\":\"submit\"}},[_vm._v(\"\\n                Verder\\n              \")])],1)]),_c('md-step',{attrs:{\"id\":\"classification\",\"md-label\":\"Classificatie\",\"md-description\":'Waar valt ' + _vm.unit + '?',\"md-error\":_vm.$v.classification.$dirty && _vm.$v.classification.$invalid\n                ? 'Informatie mist'\n                : '',\"md-done\":!_vm.$v.classification.$invalid}},[_c('p',[_vm._v(\"\\n              In dit onderdeel vragen we je \"+_vm._s(_vm.unit)+\" te classificeren. Waar\\n              valt \"+_vm._s(_vm.unit)+\" in ons curriculum?\\n            \")]),_c('form',{attrs:{\"novalidate\":\"\"},on:{\"submit\":function($event){_vm.next($event, 'classification', 'people')}}},[_c('div',{staticClass:\"lab-fake-field\",class:{\n                  'md-invalid':\n                    _vm.$v.classification.competencies.$dirty &&\n                    _vm.$v.classification.competencies.$invalid\n                }},[_c('h2',{staticClass:\"lab-fake-label lab-fake-label-required\"},[_vm._v(\"\\n                  Competenties\\n                \")]),_c('p',{staticClass:\"help\"},[_vm._v(\"\\n                  De CMD competenties beschrijven het \"),_c('em',[_vm._v(\"eindniveau\")]),_vm._v(\" van\\n                  een CMD student. Kies dus competenties waaraan gewerkt wordt\\n                  tijdens \"+_vm._s(_vm.unit)+\".\\n                \")]),_vm._l((_vm.options.competency),function(option){return _c('div',{key:option._id},[_c('md-checkbox',{staticClass:\"lab-check-vertical\",attrs:{\"value\":option._id},model:{value:(_vm.$v.classification.competencies.$model),callback:function ($$v) {_vm.$set(_vm.$v.classification.competencies, \"$model\", $$v)},expression:\"$v.classification.competencies.$model\"}},[_vm._v(\"\\n                    \"+_vm._s(option.value)+\"\\n                  \")]),_c('p',{staticClass:\"lab-check-description\",on:{\"click\":function($event){_vm.toggle(_vm.classification.competencies, option._id)}}},[_vm._v(\"\\n                    \"+_vm._s(_vm.pick(option.description).value)+\"\\n                  \")])],1)}),(\n                    _vm.$v.classification.competencies.$dirty &&\n                      !_vm.$v.classification.competencies.required\n                  )?_c('p',{staticClass:\"lab-fake-error\"},[_vm._v(\"\\n                  Dit veld is verplicht\\n                \")]):_vm._e()],2),(_vm.info.type == 'course')?_c('div',{staticClass:\"lab-fake-field\",class:{\n                  'md-invalid':\n                    _vm.$v.classification.circles.$dirty &&\n                    _vm.$v.classification.circles.$invalid\n                }},[_c('h2',{staticClass:\"lab-fake-label lab-fake-label-required\"},[_vm._v(\"\\n                  Cirkels\\n                \")]),_c('img',{staticClass:\"lab-circles\",attrs:{\"src\":require(\"./assets/circles.png\")}}),_c('p',{staticClass:\"help\"},[_vm._v(\"\\n                  In welk gedeelte van de CMD cirkels valt \"+_vm._s(_vm.unit)+\"?\\n                \")]),_vm._l((_vm.options.circles),function(option){return _c('md-radio',{key:option._id,staticClass:\"lab-check-vertical\",attrs:{\"value\":option._id},model:{value:(_vm.$v.classification.circles.$model),callback:function ($$v) {_vm.$set(_vm.$v.classification.circles, \"$model\", $$v)},expression:\"$v.classification.circles.$model\"}},[_c('strong',[_vm._v(_vm._s(option._id))]),_vm._v(\": \"+_vm._s(_vm.pick(option.values).value)+\"\\n                \")])}),(\n                    _vm.$v.classification.circles.$dirty &&\n                      !_vm.$v.classification.circles.required\n                  )?_c('p',{staticClass:\"lab-fake-error\"},[_vm._v(\"\\n                  Dit veld is verplicht\\n                \")]):_vm._e()],2):_vm._e(),(_vm.info.type == 'project')?_c('div',[_c('h2',{staticClass:\"lab-fake-label lab-fake-label-required\",class:{\n                    'md-invalid':\n                      _vm.$v.classification.spaces.$dirty &&\n                      _vm.$v.classification.spaces.$invalid\n                  }},[_vm._v(\"\\n                  Gebieden\\n                \")]),_c('img',{staticClass:\"lab-spaces\",attrs:{\"src\":require(\"./assets/spaces.png\")}}),_c('p',{staticClass:\"help\"},[_vm._v(\"In welk gebied valt \"+_vm._s(_vm.unit)+\"?\")]),_c('details',[_c('summary',[_vm._v(\"Meer informatie over de gebieden\")]),_c('h3',[_vm._v(\"Probleem\")]),_c('p',[_vm._v(\"\\n                    Dit is de space van meta of strategisch begrip en\\n                    afbakening. De ontwerper zoekt een kader op strategisch\\n                    niveau om het project richting te geven. Hoewel dat de\\n                    focus op begrip en afbakening ligt, heeft de ontwerper\\n                    zijn hele arsenaal aan competenties nodig om een design\\n                    challenge te definiëren die helder en inspirerend is.\\n                  \")]),_c('h3',[_vm._v(\"Concept\")]),_c('p',[_vm._v(\"\\n                    In deze space vormt de strategische challenge het\\n                    startpunt voor het genereren en valideren van ideeën. Dit\\n                    betekent een aantal tastbare opties creëren en evalueren\\n                    of ze effectief en gepast zijn. Het doel is het selecteren\\n                    van een productvisie en -concept dat door een team\\n                    verfijnd en uitgewerkt kan worden tot een lanceerbaar\\n                    product.\\n                  \")]),_c('h3',[_vm._v(\"Ontwerp / bouwen\")]),_c('p',[_vm._v(\"\\n                    De space van detailontwerp, realisatie en afwegingen. Dit\\n                    is ook de space waar veel ontwerpers hun carrière starten\\n                    (in combinatie met de market space). Het concept of de\\n                    challenge is al dan niet van de ontwerpers in deze ruimte\\n                    zelf. Ze werken het concept in ieder geval uit - in\\n                    verschillende iteraties en meestal in multidisciplinaire\\n                    teams - tot iets dat gelanceerd kan worden.\\n                  \")]),_c('h3',[_vm._v(\"Markt\")]),_c('p',[_vm._v(\"\\n                    In de market space worden vaak bedrijfskritische producten\\n                    uitgebreid en herontworpen, om de user experience en\\n                    prestaties/metrics te optimaliseren, nieuwe mogelijkheden\\n                    te benutten en om druk van concurrenten het hoofd te\\n                    bieden. Bij het doorlopen van de iteraties is een\\n                    complicerende factor dat rekening gehouden moet worden met\\n                    een live systeem.\\n                  \")])]),_vm._l((_vm.options.spaces),function(option){return _c('md-radio',{key:option._id,staticClass:\"lab-check-vertical\",attrs:{\"value\":option._id},model:{value:(_vm.$v.classification.spaces.$model),callback:function ($$v) {_vm.$set(_vm.$v.classification.spaces, \"$model\", $$v)},expression:\"$v.classification.spaces.$model\"}},[_c('strong',[_vm._v(_vm._s(option.number))]),_vm._v(\": \"+_vm._s(_vm.pick(option.values).value)+\"\\n                \")])}),(\n                    _vm.$v.classification.spaces.$dirty &&\n                      !_vm.$v.classification.spaces.required\n                  )?_c('p',{staticClass:\"lab-fake-error\"},[_vm._v(\"\\n                  Dit veld is verplicht\\n                \")]):_vm._e()],2):_vm._e(),(_vm.info.type == 'project')?_c('div',{staticClass:\"lab-levels\"},[_c('h2',[_vm._v(\"Niveau\")]),_c('p',{staticClass:\"help\"},[_vm._v(\"\\n                  Wat is het niveau van de opdracht van \"+_vm._s(_vm.unit)+\"?\\n                \")]),_c('table',{staticClass:\"lab-level-table\"},[_c('thead',[_c('tr',[_c('th'),_vm._l((_vm.options.independenceLevels),function(option){return _c('th',{key:option._id},[_vm._v(\"\\n                        \"+_vm._s(_vm.pick(option.values).value)+\"\\n                      \")])})],2)]),_c('tbody',[_c('tr',[_c('th',[_vm._v(\"\\n                        \"+_vm._s(_vm.pick(_vm.options.complexityLevels[3].values).value)+\"\\n                      \")]),_c('td',{staticClass:\"profiling\"},[_vm._v(\"Profileren\")]),_c('td',{staticClass:\"graduation\"},[_vm._v(\"Afstuderen\")]),_c('td',{staticClass:\"excel\"},[_vm._v(\"Excelleren\")]),_c('td',{staticClass:\"excel\"},[_vm._v(\"Excelleren\")])]),_c('tr',[_c('th',[_vm._v(\"\\n                        \"+_vm._s(_vm.pick(_vm.options.complexityLevels[2].values).value)+\"\\n                      \")]),_c('td',{staticClass:\"profiling\"},[_vm._v(\"Profileren\")]),_c('td',{staticClass:\"profiling\"},[_vm._v(\"Profileren\")]),_c('td',{staticClass:\"graduation\"},[_vm._v(\"Afstuderen\")]),_c('td',{staticClass:\"excel\"},[_vm._v(\"Excelleren\")])]),_c('tr',[_c('th',[_vm._v(\"\\n                        \"+_vm._s(_vm.pick(_vm.options.complexityLevels[1].values).value)+\"\\n                      \")]),_c('td',{staticClass:\"foundation\"},[_vm._v(\"Funderen\")]),_c('td',{staticClass:\"profiling\"},[_vm._v(\"Profileren\")]),_c('td',{staticClass:\"profiling\"},[_vm._v(\"Profileren\")]),_c('td',{staticClass:\"graduation\"},[_vm._v(\"Afstuderen\")])]),_c('tr',[_c('th',[_vm._v(\"\\n                        \"+_vm._s(_vm.pick(_vm.options.complexityLevels[0].values).value)+\"\\n                      \")]),_c('td',{staticClass:\"foundation\"},[_vm._v(\"Funderen\")]),_c('td',{staticClass:\"foundation\"},[_vm._v(\"Funderen\")]),_c('td',{staticClass:\"profiling\"},[_vm._v(\"Profileren\")]),_c('td',{staticClass:\"profiling\"},[_vm._v(\"Profileren\")])])])]),_c('div',{staticClass:\"lab-fake-field\",class:{\n                    'md-invalid':\n                      _vm.$v.classification.levelComplexity.$dirty &&\n                      _vm.$v.classification.levelComplexity.$invalid\n                  }},[_c('h3',{staticClass:\"lab-fake-label lab-fake-label-required\"},[_vm._v(\"\\n                    Complexiteit\\n                  \")]),_c('p',{staticClass:\"help\"},[_vm._v(\"Wat is de complexiteit van \"+_vm._s(_vm.unit)+\"?\")]),_vm._l((_vm.options.complexityLevels),function(option){return _c('div',{key:option._id},[_c('md-radio',{staticClass:\"lab-check-vertical\",attrs:{\"value\":option._id},model:{value:(_vm.$v.classification.levelComplexity.$model),callback:function ($$v) {_vm.$set(_vm.$v.classification.levelComplexity, \"$model\", $$v)},expression:\"$v.classification.levelComplexity.$model\"}},[_vm._v(\"\\n                      \"+_vm._s(_vm.pick(option.values).value)+\"\\n                    \")]),_c('p',{staticClass:\"lab-check-description\",on:{\"click\":function($event){_vm.classification.levelComplexity = option._id}}},[_vm._v(\"\\n                      \"+_vm._s(_vm.pick(option.values).description)+\"\\n                    \")])],1)}),(\n                      _vm.$v.classification.levelComplexity.$dirty &&\n                        !_vm.$v.classification.levelComplexity.required\n                    )?_c('p',{staticClass:\"lab-fake-error\"},[_vm._v(\"\\n                    Dit veld is verplicht\\n                  \")]):_vm._e()],2),_c('div',{staticClass:\"lab-fake-field\",class:{\n                    'md-invalid':\n                      _vm.$v.classification.levelIndependence.$dirty &&\n                      _vm.$v.classification.levelIndependence.$invalid\n                  }},[_c('h3',{staticClass:\"lab-fake-label lab-fake-label-required\"},[_vm._v(\"\\n                    Initiërend vermogen\\n                  \")]),_c('p',{staticClass:\"help\"},[_vm._v(\"\\n                    Wat is het initiërend vermogen gevraagd van studenten van\\n                    \"+_vm._s(_vm.unit)+\"?\\n                  \")]),_vm._l((_vm.options.independenceLevels),function(option){return _c('div',{key:option._id},[_c('md-radio',{staticClass:\"lab-check-vertical\",attrs:{\"value\":option._id},model:{value:(_vm.$v.classification.levelIndependence.$model),callback:function ($$v) {_vm.$set(_vm.$v.classification.levelIndependence, \"$model\", $$v)},expression:\"$v.classification.levelIndependence.$model\"}},[_vm._v(\"\\n                      \"+_vm._s(_vm.pick(option.values).value)+\"\\n                    \")]),_c('p',{staticClass:\"lab-check-description\",on:{\"click\":function($event){_vm.classification.levelIndependence = option._id}}},[_vm._v(\"\\n                      \"+_vm._s(_vm.pick(option.values).description)+\"\\n                    \")])],1)}),(\n                      _vm.$v.classification.levelIndependence.$dirty &&\n                        !_vm.$v.classification.levelIndependence.required\n                    )?_c('p',{staticClass:\"lab-fake-error\"},[_vm._v(\"\\n                    Dit veld is verplicht\\n                  \")]):_vm._e()],2)]):_vm._e(),(_vm.$v.classification.$dirty && _vm.$v.classification.$invalid)?_c('p',{staticClass:\"lab-fake-error\"},[_vm._v(\"\\n                Er mist nog informatie.\\n              \")]):_vm._e(),_c('md-button',{staticClass:\"md-dense md-raised md-primary\",attrs:{\"type\":\"submit\"}},[_vm._v(\"\\n                Verder\\n              \")])],1)]),_c('md-step',{attrs:{\"id\":\"people\",\"md-label\":\"Mensen\",\"md-description\":\"De betrokken docenten en coordinatoren van de module\",\"md-error\":_vm.$v.people.$dirty && _vm.$v.people.$invalid ? 'Informatie mist' : '',\"md-done\":!_vm.$v.people.$invalid}},[_c('p',[_vm._v(\"\\n              In dit onderdeel vragen we je om aan te geven wie\\n              \"+_vm._s(_vm.unit)+\" coördineren en doceren.\\n            \")]),_c('form',{attrs:{\"novalidate\":\"\"},on:{\"submit\":function($event){_vm.next($event, 'people')}}},[_c('div',{staticClass:\"lab-fake-field\",class:{\n                  'md-invalid': _vm.$v.people.$dirty && _vm.$v.people.$invalid\n                }},[_c('md-table',{attrs:{\"md-sort\":\"name\",\"md-sort-order\":\"desc\",\"md-fixed-header\":\"\"},scopedSlots:_vm._u([{key:\"md-table-row\",fn:function(ref){\n                var item = ref.item;\nreturn _c('md-table-row',{},[_c('md-table-cell',{attrs:{\"md-label\":\"Naam\",\"md-sort-by\":\"name\"}},[_vm._v(\"\\n                      \"+_vm._s(item.name)+\"\\n                    \")]),_c('md-table-cell',{attrs:{\"md-label\":\"Docent\"}},[_c('md-checkbox',{staticClass:\"lab-check-no-margin\",attrs:{\"value\":item._id},model:{value:(_vm.$v.people.teachers.$model),callback:function ($$v) {_vm.$set(_vm.$v.people.teachers, \"$model\", $$v)},expression:\"$v.people.teachers.$model\"}})],1),_c('md-table-cell',{attrs:{\"md-label\":\"Coördinator\"}},[_c('md-checkbox',{staticClass:\"lab-check-no-margin\",attrs:{\"value\":item._id},model:{value:(_vm.$v.people.coordinators.$model),callback:function ($$v) {_vm.$set(_vm.$v.people.coordinators, \"$model\", $$v)},expression:\"$v.people.coordinators.$model\"}})],1)],1)}}]),model:{value:(_vm.peopleSearched),callback:function ($$v) {_vm.peopleSearched=$$v},expression:\"peopleSearched\"}},[_c('md-table-toolbar',[_c('div',{staticClass:\"md-toolbar-section-start\"},[_c('h1',{staticClass:\"md-title lab-fake-label lab-fake-label-required\"},[_vm._v(\"\\n                        Rollen\\n                      \")])]),_c('md-field',{staticClass:\"md-toolbar-section-end\",attrs:{\"md-clearable\":\"\"}},[_c('md-input',{attrs:{\"placeholder\":\"Zoek op naam…\"},on:{\"input\":_vm.searchInPeople},model:{value:(_vm.peopleSearch),callback:function ($$v) {_vm.peopleSearch=$$v},expression:\"peopleSearch\"}})],1)],1)],1),(_vm.$v.people.$dirty && _vm.$v.people.$invalid)?_c('span',{staticClass:\"md-error\"},[_vm._v(\"\\n                  Dit veld is verplicht\\n                \")]):_vm._e()],1),(_vm.$v.people.$dirty && _vm.$v.people.$invalid)?_c('p',{staticClass:\"lab-fake-error\"},[_vm._v(\"\\n                Er mist nog informatie.\\n              \")]):_vm._e(),_c('md-button',{staticClass:\"md-dense md-raised md-primary\",attrs:{\"type\":\"submit\"}},[_vm._v(\"\\n                Afronden\\n              \")])],1)])],1)],1)],1),_c('md-dialog-confirm',{attrs:{\"md-active\":_vm.showDialog,\"md-title\":\"Gelukt!\",\"md-content\":\"Bedankt voor invullen van deze module! 💖 De data is opgestuurd naar de database. 👾 Wil je de pagina herladen om een nieuwe module in te vullen? ♻️\",\"md-confirm-text\":\"Ja, herlaad\",\"md-cancel-text\":\"Nee\"},on:{\"update:mdActive\":function($event){_vm.showDialog=$event},\"md-confirm\":_vm.onConfirm}})],1)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div id=\"app\">\n    <div class=\"page-container\">\n      <md-app md-waterfall md-mode=\"overlap\">\n        <md-app-toolbar class=\"md-large\">\n          <div class=\"md-toolbar-row\">\n            <h1 class=\"md-title\">CMD Monitor</h1>\n          </div>\n        </md-app-toolbar>\n\n        <md-app-content>\n          <md-steppers :md-active-step.sync=\"step\" md-vertical md-linear>\n            <md-step\n              id=\"intro\"\n              md-label=\"Introductie\"\n              md-description=\"Introductie van de monitor\"\n            >\n              <p>\n                In deze monitor vragen vragen we je om informatie over een\n                module in te vullen. Deze informatie kunnen we later gebruiken\n                om het curriculum van volgend jaar te visualiseren, maar ook\n                voor in de studiegids.\n              </p>\n              <p>\n                Deze monitor is bedoelt voor coördinatoren om modules, zoals een\n                vak, in te vullen. Deze monitor is <strong>niet</strong> bedoelt\n                voor modules waar studenten zelfstandig bepalen wat ze leren\n                (zoals SLC of een stage) of modules bestaand uit weer andere\n                modules (zoals een minor of een keuze semester).\n              </p>\n              <md-button\n                v-on:click=\"next($event, 'intro', 'info')\"\n                class=\"md-dense md-raised md-primary\"\n              >\n                Begin\n              </md-button>\n            </md-step>\n\n            <md-step\n              id=\"info\"\n              md-label=\"Informatie\"\n              md-description=\"Informatie over de module\"\n              :md-error=\"\n                $v.info.$dirty && $v.info.$invalid ? 'Informatie mist' : ''\n              \"\n              :md-done=\"!$v.info.$invalid\"\n            >\n              <p>\n                In dit onderdeel van de monitor vragen we je globale informatie\n                over de module in te vullen. <br />\n                <em>\n                  Vul geen groepen van vakken in, zoals bijvoorbeeld een minor\n                  of een keuzesemester.\n                </em>\n              </p>\n              <form novalidate v-on:submit=\"next($event, 'info', 'matter')\">\n                <md-field\n                  :class=\"{\n                    'md-invalid': $v.info.name.$dirty && $v.info.name.$invalid\n                  }\"\n                >\n                  <label>Naam</label>\n                  <md-input v-model.trim=\"$v.info.name.$model\" required />\n                  <span class=\"md-error\">Dit veld is verplicht</span>\n                </md-field>\n                <p class=\"help\">\n                  Wat is de naam van de module? Bijvoorbeeld,\n                  <samp>Design Ethics</samp>.\n                </p>\n\n                <md-field\n                  :class=\"{\n                    'md-invalid':\n                      $v.info.shortDescription.$dirty &&\n                      $v.info.shortDescription.$invalid\n                  }\"\n                >\n                  <label>Korte beschrijving</label>\n                  <md-textarea\n                    v-model.trim=\"$v.info.shortDescription.$model\"\n                    md-autogrow\n                    required\n                    :maxlength=\"$v.info.shortDescription.$params.maxLength.max\"\n                  />\n                  <span\n                    v-if=\"!$v.info.shortDescription.required\"\n                    class=\"md-error\"\n                  >\n                    Dit veld is verplicht\n                  </span>\n                  <span\n                    v-if=\"!$v.info.shortDescription.maxLength\"\n                    class=\"md-error\"\n                  >\n                    Dit veld is te lang (max.\n                    {{\n                      $v.info.shortDescription.$params.maxLength.max\n                    }}\n                    karakters)\n                  </span>\n                </md-field>\n                <p class=\"help\">\n                  Beschrijf de module in één zin. Bijvoorbeeld,\n                  <samp\n                    >Design ethics is a course that allows you to integrate\n                    ethical thinking into your design practice.\n                  </samp>\n                </p>\n\n                <md-field\n                  :class=\"{\n                    'md-invalid':\n                      $v.info.description.$dirty && $v.info.description.$invalid\n                  }\"\n                >\n                  <label>Lange beschrijving</label>\n                  <md-textarea\n                    v-model.trim=\"$v.info.description.$model\"\n                    md-autogrow\n                    required\n                    :maxlength=\"$v.info.description.$params.maxLength.max\"\n                  />\n                  <span v-if=\"!$v.info.description.required\" class=\"md-error\">\n                    Dit veld is verplicht\n                  </span>\n                  <span v-if=\"!$v.info.description.maxLength\" class=\"md-error\">\n                    Dit veld is te lang (max.\n                    {{ $v.info.description.$params.maxLength.max }} karakters)\n                  </span>\n                </md-field>\n                <p class=\"help\">Beschrijf de module in twee tot vier alineas</p>\n\n                <div\n                  class=\"lab-fake-field\"\n                  :class=\"{\n                    'md-invalid': $v.info.type.$dirty && $v.info.type.$invalid\n                  }\"\n                >\n                  <h2 class=\"lab-fake-label lab-fake-label-required\">Type</h2>\n                  <p class=\"help\">Wat is het type van de module?</p>\n                  <md-radio\n                    v-model=\"$v.info.type.$model\"\n                    v-for=\"option in options.type\"\n                    :key=\"option._id\"\n                    :value=\"option._id\"\n                  >\n                    {{ pick(option.values).value }}\n                  </md-radio>\n                  <p\n                    v-if=\"$v.info.type.$dirty && !$v.info.type.required\"\n                    class=\"lab-fake-error\"\n                  >\n                    Dit veld is verplicht\n                  </p>\n                </div>\n\n                <md-field\n                  :class=\"{\n                    'md-invalid':\n                      $v.info.credits.$dirty && $v.info.credits.$invalid\n                  }\"\n                >\n                  <label>Studiepunten (ECTS)</label>\n                  <md-input\n                    v-model=\"$v.info.credits.$model\"\n                    :min=\"$v.info.credits.$params.minValue.min\"\n                    :max=\"$v.info.credits.$params.maxValue.max\"\n                    type=\"number\"\n                    required\n                  />\n                  <span v-if=\"!$v.info.credits.required\" class=\"md-error\">\n                    Dit veld is verplicht\n                  </span>\n                  <span v-if=\"!$v.info.credits.minValue\" class=\"md-error\">\n                    Dit veld is te laag (min.\n                    {{ $v.info.credits.$params.minValue.min }})\n                  </span>\n                  <span v-if=\"!$v.info.credits.maxValue\" class=\"md-error\">\n                    Dit veld is te hoog (max.\n                    {{ $v.info.credits.$params.maxValue.max }})\n                  </span>\n                </md-field>\n                <p class=\"help\">\n                  Hoeveel studiepunten staan voor {{ unit }}?\n                  <span v-if=\"info.type == 'course'\">\n                    Een vak is doorgaans\n                    <strong v-on:click=\"info.credits = 3\">3 punten</strong>.\n                  </span>\n                  <span v-if=\"info.type == 'project'\">\n                    Een project is doorgaans\n                    <strong v-on:click=\"info.credits = 5\">5 punten</strong>.\n                  </span>\n                </p>\n\n                <div\n                  class=\"lab-fake-field\"\n                  :class=\"{\n                    'md-invalid': $v.info.phase.$dirty && $v.info.phase.$invalid\n                  }\"\n                >\n                  <h2 class=\"lab-fake-label lab-fake-label-required\">Fase</h2>\n                  <p class=\"help\">In welk fase wordt {{ unit }} aangeboden?</p>\n                  <md-radio\n                    v-model=\"$v.info.phase.$model\"\n                    v-for=\"option in options.phase\"\n                    :key=\"option._id\"\n                    :value=\"option._id\"\n                  >\n                    {{ pick(option.values).value }}\n                  </md-radio>\n                  <p\n                    v-if=\"$v.info.phase.$dirty && !$v.info.phase.required\"\n                    class=\"lab-fake-error\"\n                  >\n                    Dit veld is verplicht\n                  </p>\n                </div>\n\n                <div\n                  class=\"lab-fake-field\"\n                  :class=\"{\n                    'md-invalid':\n                      $v.info.learningYear.$dirty &&\n                      $v.info.learningYear.$invalid\n                  }\"\n                >\n                  <h2 class=\"lab-fake-label lab-fake-label-required\">\n                    Leerjaar\n                  </h2>\n                  <p class=\"help\">\n                    In welk leerjaar wordt {{ unit }} aangeboden?\n                  </p>\n                  <md-radio\n                    v-model=\"$v.info.learningYear.$model\"\n                    v-for=\"option in options.learningYear\"\n                    :key=\"option._id\"\n                    :value=\"option._id\"\n                  >\n                    {{ pick(option.values).value }}\n                  </md-radio>\n                  <p\n                    v-if=\"\n                      $v.info.learningYear.$dirty &&\n                        !$v.info.learningYear.required\n                    \"\n                    class=\"lab-fake-error\"\n                  >\n                    Dit veld is verplicht\n                  </p>\n                </div>\n\n                <div\n                  class=\"lab-fake-field\"\n                  :class=\"{\n                    'md-invalid':\n                      $v.info.quarter.$dirty && $v.info.quarter.$invalid\n                  }\"\n                >\n                  <h2 class=\"lab-fake-label lab-fake-label-required\">\n                    Kwartaal\n                  </h2>\n                  <p class=\"help\">\n                    In welk kwartaal wordt {{ unit }} aangeboden? Als\n                    {{ unit }} in meerdere kwartalen wordt aangeboden, of een\n                    semester overbrugt, maak dan meerdere keuzes.\n                  </p>\n                  <md-checkbox\n                    v-model=\"$v.info.quarter.$model\"\n                    v-for=\"option in options.quarter\"\n                    :key=\"option._id\"\n                    :value=\"option._id\"\n                  >\n                    {{ pick(option.values).value }}\n                  </md-checkbox>\n                  <p\n                    v-if=\"$v.info.quarter.$dirty && !$v.info.quarter.required\"\n                    class=\"lab-fake-error\"\n                  >\n                    Dit veld is verplicht\n                  </p>\n                </div>\n\n                <div\n                  v-if=\"info.phase == 'profiling' || info.phase == 'minor'\"\n                  class=\"lab-fake-field\"\n                  :class=\"{\n                    'md-invalid':\n                      $v.info.cluster.$dirty && $v.info.cluster.$invalid\n                  }\"\n                >\n                  <h2 class=\"lab-fake-label lab-fake-label-required\">\n                    <span v-if=\"info.phase == 'profiling'\">Project</span>\n                    <span v-if=\"info.phase == 'minor'\">Minor</span>\n                  </h2>\n                  <p class=\"help\">Bij welke groep hoort {{ unit }}?</p>\n                  <md-checkbox\n                    class=\"lab-check-vertical\"\n                    v-model=\"$v.info.cluster.$model\"\n                    v-for=\"option in options.cluster.filter(o =>\n                      o.phase.includes(info.phase)\n                    )\"\n                    :key=\"option._id\"\n                    :value=\"option._id\"\n                  >\n                    {{ pick(option.name).value }}\n                  </md-checkbox>\n                  <p\n                    v-if=\"$v.info.cluster.$dirty && !$v.info.cluster.required\"\n                    class=\"lab-fake-error\"\n                  >\n                    Dit veld is verplicht\n                  </p>\n                </div>\n\n                <p\n                  v-if=\"$v.info.$dirty && $v.info.$invalid\"\n                  class=\"lab-fake-error\"\n                >\n                  Er mist nog informatie.\n                </p>\n\n                <md-button type=\"submit\" class=\"md-dense md-raised md-primary\">\n                  Verder\n                </md-button>\n              </form>\n            </md-step>\n\n            <md-step\n              id=\"matter\"\n              md-label=\"Materie\"\n              md-description=\"Wat studenten leren, en hoe\"\n              :md-error=\"\n                $v.matter.$dirty && $v.matter.$invalid ? 'Informatie mist' : ''\n              \"\n              :md-done=\"!$v.matter.$invalid\"\n            >\n              <p>\n                In dit onderdeel van de monitor vragen we je naar de inhoud van\n                {{ unit }}. Wat is de stof? Hoe wordt er gewerkt?\n              </p>\n\n              <form\n                novalidate\n                v-on:submit=\"next($event, 'matter', 'classification')\"\n              >\n                <md-field\n                  :class=\"{\n                    'md-invalid':\n                      $v.matter.objectivesSummary.$dirty &&\n                      $v.matter.objectivesSummary.$invalid\n                  }\"\n                >\n                  <label>Leerdoelen</label>\n                  <md-textarea\n                    v-model.trim=\"$v.matter.objectivesSummary.$model\"\n                    :maxlength=\"\n                      $v.matter.objectivesSummary.$params.maxLength.max\n                    \"\n                    md-autogrow\n                    required\n                  />\n                  <span\n                    class=\"md-error\"\n                    v-if=\"!$v.matter.objectivesSummary.required\"\n                    >Dit veld is verplicht</span\n                  >\n                  <span\n                    class=\"md-error\"\n                    v-if=\"!$v.matter.objectivesSummary.maxLength\"\n                    >Dit veld is te lang (max.\n                    {{\n                      $v.matter.objectivesSummary.$params.maxLength.max\n                    }}\n                    karakters)</span\n                  >\n                </md-field>\n                <p class=\"help\">\n                  Beschrijf wat de student leert. Vul meerdere leerdoelen in.\n                  Gebruik streepjes en enters. Bijvoorbeeld,\n                  <samp\n                    >- You learn to be aware of the ethical issues involved in\n                    design and designing</samp\n                  >\n                </p>\n\n                <div\n                  class=\"lab-fake-field\"\n                  :class=\"{\n                    'md-invalid':\n                      $v.matter.methods.$dirty && $v.matter.methods.$invalid\n                  }\"\n                >\n                  <h2 class=\"lab-fake-label lab-fake-label-required\">\n                    Werkvormen\n                  </h2>\n                  <p class=\"help\">\n                    Geef aan welke werkvormen worden gebruikt binnen {{ unit }}.\n                  </p>\n                  <md-checkbox\n                    v-model=\"$v.matter.methods.$model\"\n                    v-for=\"option in options.method\"\n                    :key=\"option._id\"\n                    :value=\"option._id\"\n                    class=\"lab-check-vertical\"\n                  >\n                    <strong>{{ pick(option.values).value }}</strong>\n                    <span v-if=\"pick(option.values).description\">\n                      ({{ pick(option.values).description }})\n                    </span>\n                  </md-checkbox>\n                  <p\n                    class=\"lab-fake-error\"\n                    v-if=\"\n                      $v.matter.methods.$dirty && !$v.matter.methods.required\n                    \"\n                  >\n                    Dit veld is verplicht\n                  </p>\n                </div>\n\n                <md-field\n                  :class=\"{\n                    'md-invalid':\n                      $v.matter.methodsSummary.$dirty &&\n                      $v.matter.methodsSummary.$invalid\n                  }\"\n                >\n                  <label>Beschrijving van werkvormen</label>\n                  <md-textarea\n                    v-model.trim=\"$v.matter.methodsSummary.$model\"\n                    md-autogrow\n                    required\n                    :maxlength=\"$v.matter.methodsSummary.$params.maxLength.max\"\n                  />\n                  <span\n                    class=\"md-error\"\n                    v-if=\"!$v.matter.methodsSummary.required\"\n                    >Dit veld is verplicht</span\n                  >\n                  <span\n                    class=\"md-error\"\n                    v-if=\"!$v.matter.methodsSummary.maxLength\"\n                    >Dit veld is te lang (max.\n                    {{\n                      $v.matter.methodsSummary.$params.maxLength.max\n                    }}\n                    karakters)</span\n                  >\n                </md-field>\n                <p class=\"help\">\n                  Beschrijf in twee tot vier alineas hoe er binnen {{ unit }} en\n                  tijdens de werkvormen gewerkt wordt.\n                </p>\n\n                <div\n                  class=\"lab-fake-field\"\n                  :class=\"{\n                    'md-invalid':\n                      $v.matter.assessments.$dirty &&\n                      $v.matter.assessments.$invalid\n                  }\"\n                >\n                  <h2 class=\"lab-fake-label lab-fake-label-required\">\n                    Toetsvormen\n                  </h2>\n                  <p class=\"help\">\n                    Geef aan welke toetsvormen worden gebruikt binnen\n                    {{ unit }}.\n                  </p>\n                  <md-checkbox\n                    v-model=\"$v.matter.assessments.$model\"\n                    v-for=\"option in options.assessments\"\n                    :key=\"option._id\"\n                    :value=\"option._id\"\n                    class=\"lab-check-vertical\"\n                  >\n                    <strong>{{ pick(option.values).value }}</strong>\n                    <span v-if=\"pick(option.values).description\">\n                      ({{ pick(option.values).description }})\n                    </span>\n                  </md-checkbox>\n                  <p\n                    class=\"lab-fake-error\"\n                    v-if=\"\n                      $v.matter.assessments.$dirty &&\n                        !$v.matter.assessments.required\n                    \"\n                  >\n                    Dit veld is verplicht\n                  </p>\n                </div>\n\n                <md-field\n                  :class=\"{\n                    'md-invalid':\n                      $v.matter.assessmentsSummary.$dirty &&\n                      $v.matter.assessmentsSummary.$invalid\n                  }\"\n                >\n                  <label>Beschrijving van toetsvormen</label>\n                  <md-textarea\n                    v-model.trim=\"$v.matter.assessmentsSummary.$model\"\n                    md-autogrow\n                    required\n                    :maxlength=\"\n                      $v.matter.assessmentsSummary.$params.maxLength.max\n                    \"\n                  />\n                  <span\n                    class=\"md-error\"\n                    v-if=\"!$v.matter.assessmentsSummary.required\"\n                    >Dit veld is verplicht</span\n                  >\n                  <span\n                    class=\"md-error\"\n                    v-if=\"!$v.matter.assessmentsSummary.maxLength\"\n                    >Dit veld is te lang (max.\n                    {{\n                      $v.matter.assessmentsSummary.$params.maxLength.max\n                    }}\n                    karakters)</span\n                  >\n                </md-field>\n                <p class=\"help\">\n                  Beschrijf in twee tot vier alineas hoe er binnen\n                  {{ unit }} getoetst wordt.\n                </p>\n\n                <md-field\n                  :class=\"{\n                    'md-invalid':\n                      $v.matter.studyMaterialsRequired.$dirty &&\n                      $v.matter.studyMaterialsRequired.$invalid\n                  }\"\n                >\n                  <label>Studiemateriaal verplicht</label>\n                  <md-textarea\n                    v-model.trim=\"$v.matter.studyMaterialsRequired.$model\"\n                    md-autogrow\n                    :maxlength=\"\n                      $v.matter.studyMaterialsRequired.$params.maxLength.max\n                    \"\n                  />\n                  <span\n                    v-if=\"!$v.matter.studyMaterialsRequired.maxLength\"\n                    class=\"md-error\"\n                  >\n                    Dit veld is te lang (max.\n                    {{\n                      $v.matter.studyMaterialsRequired.$params.maxLength.max\n                    }}\n                    karakters)\n                  </span>\n                </md-field>\n                <p class=\"help\">\n                  Vul de verplichte studie materialen in die studenten zelf\n                  moeten aanschaffen voor {{ unit }}. Gebruik streepjes en\n                  enters. Bijvoorbeeld,\n                  <samp\n                    >- Fink, L. Dee. Creating Significant Learning Experiences.\n                    Jossey-Bass, 2013.</samp\n                  >\n                </p>\n\n                <md-field\n                  :class=\"{\n                    'md-invalid':\n                      $v.matter.studyMaterialsUsed.$dirty &&\n                      $v.matter.studyMaterialsUsed.$invalid\n                  }\"\n                >\n                  <label>Studiemateriaal specifiek</label>\n                  <md-textarea\n                    v-model.trim=\"$v.matter.studyMaterialsUsed.$model\"\n                    md-autogrow\n                    :maxlength=\"\n                      $v.matter.studyMaterialsUsed.$params.maxLength.max\n                    \"\n                  />\n                  <span\n                    v-if=\"!$v.matter.studyMaterialsUsed.maxLength\"\n                    class=\"md-error\"\n                  >\n                    Dit veld is te lang (max.\n                    {{\n                      $v.matter.studyMaterialsUsed.$params.maxLength.max\n                    }}\n                    karakters)\n                  </span>\n                </md-field>\n                <p class=\"help\">\n                  Vul de specifieke studie materialen in die gebruikt worden\n                  binnen {{ unit }}. Denk aan artikelen, video’s, tutorial’s,\n                  &amp;c. Gebruik streepjes en enters. Bijvoorbeeld,\n                  <samp\n                    >- Bostock, M. ‘Introduction to asynchronous iteration’.\n                    2018.</samp\n                  >\n                </p>\n\n                <div\n                  class=\"lab-fake-field\"\n                  :class=\"{\n                    'md-invalid':\n                      ($v.matter.productsLearned.$dirty &&\n                        $v.matter.productsLearned.$invalid) ||\n                      ($v.matter.productsAsked.$dirty &&\n                        $v.matter.productsAsked.$invalid)\n                  }\"\n                >\n                  <h2 class=\"lab-fake-label\">Beroepsproducten</h2>\n                  <p class=\"help\">\n                    Geef aan welke beroepsproducten er worden gebruikt en\n                    getoetst binnen {{ unit }}.\n                  </p>\n\n                  <md-table v-model=\"options.products\">\n                    <md-table-row slot=\"md-table-row\" slot-scope=\"{item}\">\n                      <md-table-cell md-label=\"Product\">\n                        {{ pick(item.values).value }}\n                      </md-table-cell>\n                      <md-table-cell md-label=\"Gebruikt\">\n                        <md-checkbox\n                          v-model=\"$v.matter.productsLearned.$model\"\n                          :value=\"item._id\"\n                          class=\"lab-check-no-margin\"\n                        />\n                      </md-table-cell>\n                      <md-table-cell md-label=\"Getoetst\">\n                        <md-checkbox\n                          v-model=\"$v.matter.productsAsked.$model\"\n                          :value=\"item._id\"\n                          class=\"lab-check-no-margin\"\n                        />\n                      </md-table-cell>\n                    </md-table-row>\n                  </md-table>\n                </div>\n\n                <div\n                  class=\"lab-fake-field\"\n                  :class=\"{\n                    'md-invalid':\n                      ($v.matter.researchMethodsLearned.$dirty &&\n                        $v.matter.researchMethodsLearned.$invalid) ||\n                      ($v.matter.researchMethodsAsked.$dirty &&\n                        $v.matter.researchMethodsAsked.$invalid)\n                  }\"\n                >\n                  <h2 class=\"lab-fake-label lab-fake-label-required\">\n                    Onderzoeksmethoden\n                  </h2>\n                  <p class=\"help\">\n                    Geef aan welke onderzoeksmethoden er worden gebruikt en\n                    getoetst binnen {{ unit }}.\n                  </p>\n\n                  <div class=\"lab-methods\">\n                    <md-card\n                      v-for=\"option in options.cards\"\n                      :key=\"option.id\"\n                      class=\"lab-method\"\n                      md-with-hover\n                    >\n                      <md-card-media>\n                        <img\n                          class=\"lab-method-cover\"\n                          :src=\"'http://www.cmdmethods.nl/' + option.image\"\n                          :width=\"option.width\"\n                          :height=\"option.height\"\n                          alt=\"\"\n                        />\n                      </md-card-media>\n\n                      <md-card-header>\n                        <div class=\"md-title\">\n                          <a\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                            :href=\"\n                              'http://www.cmdmethods.nl/cards/' +\n                                option.strategy +\n                                '/' +\n                                option.id\n                            \"\n                          >\n                            {{ option.name }}\n                          </a>\n                        </div>\n                      </md-card-header>\n\n                      <md-card-actions\n                        md-alignment=\"space-between\"\n                        class=\"lab-method-checks\"\n                      >\n                        <md-checkbox\n                          v-model=\"$v.matter.researchMethodsLearned.$model\"\n                          :value=\"option.id\"\n                          class=\"lab-method-check\"\n                        >\n                          Gebruikt\n                        </md-checkbox>\n                        <md-checkbox\n                          v-model=\"$v.matter.researchMethodsAsked.$model\"\n                          :value=\"option.id\"\n                          class=\"lab-method-check\"\n                        >\n                          Getoetst\n                        </md-checkbox>\n                      </md-card-actions>\n                    </md-card>\n                  </div>\n                  <span\n                    class=\"md-error\"\n                    v-if=\"\n                      ($v.matter.researchMethodsLearned.$dirty &&\n                        $v.matter.researchMethodsLearned.$invalid) ||\n                        ($v.matter.researchMethodsAsked.$dirty &&\n                          $v.matter.researchMethodsAsked.$invalid)\n                    \"\n                    >Dit veld is verplicht</span\n                  >\n                </div>\n\n                <p\n                  v-if=\"$v.matter.$dirty && $v.matter.$invalid\"\n                  class=\"lab-fake-error\"\n                >\n                  Er mist nog informatie.\n                </p>\n\n                <md-button type=\"submit\" class=\"md-dense md-raised md-primary\">\n                  Verder\n                </md-button>\n              </form>\n            </md-step>\n\n            <md-step\n              id=\"classification\"\n              md-label=\"Classificatie\"\n              :md-description=\"'Waar valt ' + unit + '?'\"\n              :md-error=\"\n                $v.classification.$dirty && $v.classification.$invalid\n                  ? 'Informatie mist'\n                  : ''\n              \"\n              :md-done=\"!$v.classification.$invalid\"\n            >\n              <p>\n                In dit onderdeel vragen we je {{ unit }} te classificeren. Waar\n                valt {{ unit }} in ons curriculum?\n              </p>\n\n              <form\n                novalidate\n                v-on:submit=\"next($event, 'classification', 'people')\"\n              >\n                <div\n                  class=\"lab-fake-field\"\n                  :class=\"{\n                    'md-invalid':\n                      $v.classification.competencies.$dirty &&\n                      $v.classification.competencies.$invalid\n                  }\"\n                >\n                  <h2 class=\"lab-fake-label lab-fake-label-required\">\n                    Competenties\n                  </h2>\n                  <p class=\"help\">\n                    De CMD competenties beschrijven het <em>eindniveau</em> van\n                    een CMD student. Kies dus competenties waaraan gewerkt wordt\n                    tijdens {{ unit }}.\n                  </p>\n                  <div v-for=\"option in options.competency\" :key=\"option._id\">\n                    <md-checkbox\n                      v-model=\"$v.classification.competencies.$model\"\n                      :value=\"option._id\"\n                      class=\"lab-check-vertical\"\n                    >\n                      {{ option.value }}\n                    </md-checkbox>\n                    <p\n                      class=\"lab-check-description\"\n                      v-on:click=\"\n                        toggle(classification.competencies, option._id)\n                      \"\n                    >\n                      {{ pick(option.description).value }}\n                    </p>\n                  </div>\n                  <p\n                    class=\"lab-fake-error\"\n                    v-if=\"\n                      $v.classification.competencies.$dirty &&\n                        !$v.classification.competencies.required\n                    \"\n                  >\n                    Dit veld is verplicht\n                  </p>\n                </div>\n\n                <div\n                  v-if=\"info.type == 'course'\"\n                  class=\"lab-fake-field\"\n                  :class=\"{\n                    'md-invalid':\n                      $v.classification.circles.$dirty &&\n                      $v.classification.circles.$invalid\n                  }\"\n                >\n                  <h2 class=\"lab-fake-label lab-fake-label-required\">\n                    Cirkels\n                  </h2>\n                  <img class=\"lab-circles\" src=\"./assets/circles.png\" />\n                  <p class=\"help\">\n                    In welk gedeelte van de CMD cirkels valt {{ unit }}?\n                  </p>\n\n                  <md-radio\n                    v-model=\"$v.classification.circles.$model\"\n                    v-for=\"option in options.circles\"\n                    :key=\"option._id\"\n                    :value=\"option._id\"\n                    class=\"lab-check-vertical\"\n                  >\n                    <strong>{{ option._id }}</strong\n                    >: {{ pick(option.values).value }}\n                  </md-radio>\n                  <p\n                    v-if=\"\n                      $v.classification.circles.$dirty &&\n                        !$v.classification.circles.required\n                    \"\n                    class=\"lab-fake-error\"\n                  >\n                    Dit veld is verplicht\n                  </p>\n                </div>\n\n                <div v-if=\"info.type == 'project'\">\n                  <h2\n                    class=\"lab-fake-label lab-fake-label-required\"\n                    :class=\"{\n                      'md-invalid':\n                        $v.classification.spaces.$dirty &&\n                        $v.classification.spaces.$invalid\n                    }\"\n                  >\n                    Gebieden\n                  </h2>\n                  <img class=\"lab-spaces\" src=\"./assets/spaces.png\" />\n                  <p class=\"help\">In welk gebied valt {{ unit }}?</p>\n                  <details>\n                    <summary>Meer informatie over de gebieden</summary>\n                    <h3>Probleem</h3>\n                    <p>\n                      Dit is de space van meta of strategisch begrip en\n                      afbakening. De ontwerper zoekt een kader op strategisch\n                      niveau om het project richting te geven. Hoewel dat de\n                      focus op begrip en afbakening ligt, heeft de ontwerper\n                      zijn hele arsenaal aan competenties nodig om een design\n                      challenge te definiëren die helder en inspirerend is.\n                    </p>\n                    <h3>Concept</h3>\n                    <p>\n                      In deze space vormt de strategische challenge het\n                      startpunt voor het genereren en valideren van ideeën. Dit\n                      betekent een aantal tastbare opties creëren en evalueren\n                      of ze effectief en gepast zijn. Het doel is het selecteren\n                      van een productvisie en -concept dat door een team\n                      verfijnd en uitgewerkt kan worden tot een lanceerbaar\n                      product.\n                    </p>\n                    <h3>Ontwerp / bouwen</h3>\n                    <p>\n                      De space van detailontwerp, realisatie en afwegingen. Dit\n                      is ook de space waar veel ontwerpers hun carrière starten\n                      (in combinatie met de market space). Het concept of de\n                      challenge is al dan niet van de ontwerpers in deze ruimte\n                      zelf. Ze werken het concept in ieder geval uit - in\n                      verschillende iteraties en meestal in multidisciplinaire\n                      teams - tot iets dat gelanceerd kan worden.\n                    </p>\n                    <h3>Markt</h3>\n                    <p>\n                      In de market space worden vaak bedrijfskritische producten\n                      uitgebreid en herontworpen, om de user experience en\n                      prestaties/metrics te optimaliseren, nieuwe mogelijkheden\n                      te benutten en om druk van concurrenten het hoofd te\n                      bieden. Bij het doorlopen van de iteraties is een\n                      complicerende factor dat rekening gehouden moet worden met\n                      een live systeem.\n                    </p>\n                  </details>\n\n                  <md-radio\n                    v-model=\"$v.classification.spaces.$model\"\n                    v-for=\"option in options.spaces\"\n                    :key=\"option._id\"\n                    :value=\"option._id\"\n                    class=\"lab-check-vertical\"\n                  >\n                    <strong>{{ option.number }}</strong\n                    >: {{ pick(option.values).value }}\n                  </md-radio>\n                  <p\n                    v-if=\"\n                      $v.classification.spaces.$dirty &&\n                        !$v.classification.spaces.required\n                    \"\n                    class=\"lab-fake-error\"\n                  >\n                    Dit veld is verplicht\n                  </p>\n                </div>\n\n                <div v-if=\"info.type == 'project'\" class=\"lab-levels\">\n                  <h2>Niveau</h2>\n\n                  <p class=\"help\">\n                    Wat is het niveau van de opdracht van {{ unit }}?\n                  </p>\n\n                  <table class=\"lab-level-table\">\n                    <thead>\n                      <tr>\n                        <th></th>\n                        <th\n                          v-for=\"option in options.independenceLevels\"\n                          :key=\"option._id\"\n                        >\n                          {{ pick(option.values).value }}\n                        </th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      <tr>\n                        <th>\n                          {{ pick(options.complexityLevels[3].values).value }}\n                        </th>\n                        <td class=\"profiling\">Profileren</td>\n                        <td class=\"graduation\">Afstuderen</td>\n                        <td class=\"excel\">Excelleren</td>\n                        <td class=\"excel\">Excelleren</td>\n                      </tr>\n                      <tr>\n                        <th>\n                          {{ pick(options.complexityLevels[2].values).value }}\n                        </th>\n                        <td class=\"profiling\">Profileren</td>\n                        <td class=\"profiling\">Profileren</td>\n                        <td class=\"graduation\">Afstuderen</td>\n                        <td class=\"excel\">Excelleren</td>\n                      </tr>\n                      <tr>\n                        <th>\n                          {{ pick(options.complexityLevels[1].values).value }}\n                        </th>\n                        <td class=\"foundation\">Funderen</td>\n                        <td class=\"profiling\">Profileren</td>\n                        <td class=\"profiling\">Profileren</td>\n                        <td class=\"graduation\">Afstuderen</td>\n                      </tr>\n                      <tr>\n                        <th>\n                          {{ pick(options.complexityLevels[0].values).value }}\n                        </th>\n                        <td class=\"foundation\">Funderen</td>\n                        <td class=\"foundation\">Funderen</td>\n                        <td class=\"profiling\">Profileren</td>\n                        <td class=\"profiling\">Profileren</td>\n                      </tr>\n                    </tbody>\n                  </table>\n\n                  <div\n                    class=\"lab-fake-field\"\n                    :class=\"{\n                      'md-invalid':\n                        $v.classification.levelComplexity.$dirty &&\n                        $v.classification.levelComplexity.$invalid\n                    }\"\n                  >\n                    <h3 class=\"lab-fake-label lab-fake-label-required\">\n                      Complexiteit\n                    </h3>\n                    <p class=\"help\">Wat is de complexiteit van {{ unit }}?</p>\n\n                    <div\n                      v-for=\"option in options.complexityLevels\"\n                      :key=\"option._id\"\n                    >\n                      <md-radio\n                        v-model=\"$v.classification.levelComplexity.$model\"\n                        :value=\"option._id\"\n                        class=\"lab-check-vertical\"\n                      >\n                        {{ pick(option.values).value }}\n                      </md-radio>\n                      <p\n                        class=\"lab-check-description\"\n                        v-on:click=\"classification.levelComplexity = option._id\"\n                      >\n                        {{ pick(option.values).description }}\n                      </p>\n                    </div>\n                    <p\n                      v-if=\"\n                        $v.classification.levelComplexity.$dirty &&\n                          !$v.classification.levelComplexity.required\n                      \"\n                      class=\"lab-fake-error\"\n                    >\n                      Dit veld is verplicht\n                    </p>\n                  </div>\n\n                  <div\n                    class=\"lab-fake-field\"\n                    :class=\"{\n                      'md-invalid':\n                        $v.classification.levelIndependence.$dirty &&\n                        $v.classification.levelIndependence.$invalid\n                    }\"\n                  >\n                    <h3 class=\"lab-fake-label lab-fake-label-required\">\n                      Initiërend vermogen\n                    </h3>\n                    <p class=\"help\">\n                      Wat is het initiërend vermogen gevraagd van studenten van\n                      {{ unit }}?\n                    </p>\n\n                    <div\n                      v-for=\"option in options.independenceLevels\"\n                      :key=\"option._id\"\n                    >\n                      <md-radio\n                        v-model=\"$v.classification.levelIndependence.$model\"\n                        :value=\"option._id\"\n                        class=\"lab-check-vertical\"\n                      >\n                        {{ pick(option.values).value }}\n                      </md-radio>\n                      <p\n                        class=\"lab-check-description\"\n                        v-on:click=\"\n                          classification.levelIndependence = option._id\n                        \"\n                      >\n                        {{ pick(option.values).description }}\n                      </p>\n                    </div>\n                    <p\n                      v-if=\"\n                        $v.classification.levelIndependence.$dirty &&\n                          !$v.classification.levelIndependence.required\n                      \"\n                      class=\"lab-fake-error\"\n                    >\n                      Dit veld is verplicht\n                    </p>\n                  </div>\n                </div>\n\n                <p\n                  v-if=\"$v.classification.$dirty && $v.classification.$invalid\"\n                  class=\"lab-fake-error\"\n                >\n                  Er mist nog informatie.\n                </p>\n\n                <md-button type=\"submit\" class=\"md-dense md-raised md-primary\">\n                  Verder\n                </md-button>\n              </form>\n            </md-step>\n\n            <md-step\n              id=\"people\"\n              md-label=\"Mensen\"\n              md-description=\"De betrokken docenten en coordinatoren van de module\"\n              :md-error=\"\n                $v.people.$dirty && $v.people.$invalid ? 'Informatie mist' : ''\n              \"\n              :md-done=\"!$v.people.$invalid\"\n            >\n              <p>\n                In dit onderdeel vragen we je om aan te geven wie\n                {{ unit }} coördineren en doceren.\n              </p>\n\n              <form novalidate v-on:submit=\"next($event, 'people')\">\n                <div\n                  class=\"lab-fake-field\"\n                  :class=\"{\n                    'md-invalid': $v.people.$dirty && $v.people.$invalid\n                  }\"\n                >\n                  <md-table\n                    v-model=\"peopleSearched\"\n                    md-sort=\"name\"\n                    md-sort-order=\"desc\"\n                    md-fixed-header\n                  >\n                    <md-table-toolbar>\n                      <div class=\"md-toolbar-section-start\">\n                        <h1\n                          class=\"md-title lab-fake-label lab-fake-label-required\"\n                        >\n                          Rollen\n                        </h1>\n                      </div>\n\n                      <md-field md-clearable class=\"md-toolbar-section-end\">\n                        <md-input\n                          placeholder=\"Zoek op naam…\"\n                          v-model=\"peopleSearch\"\n                          @input=\"searchInPeople\"\n                        />\n                      </md-field>\n                    </md-table-toolbar>\n\n                    <md-table-row slot=\"md-table-row\" slot-scope=\"{item}\">\n                      <md-table-cell md-label=\"Naam\" md-sort-by=\"name\">\n                        {{ item.name }}\n                      </md-table-cell>\n\n                      <md-table-cell md-label=\"Docent\">\n                        <md-checkbox\n                          v-model=\"$v.people.teachers.$model\"\n                          :value=\"item._id\"\n                          class=\"lab-check-no-margin\"\n                        />\n                      </md-table-cell>\n\n                      <md-table-cell md-label=\"Coördinator\">\n                        <md-checkbox\n                          v-model=\"$v.people.coordinators.$model\"\n                          :value=\"item._id\"\n                          class=\"lab-check-no-margin\"\n                        />\n                      </md-table-cell>\n                    </md-table-row>\n                  </md-table>\n                  <span\n                    class=\"md-error\"\n                    v-if=\"$v.people.$dirty && $v.people.$invalid\"\n                  >\n                    Dit veld is verplicht\n                  </span>\n                </div>\n\n                <p\n                  v-if=\"$v.people.$dirty && $v.people.$invalid\"\n                  class=\"lab-fake-error\"\n                >\n                  Er mist nog informatie.\n                </p>\n\n                <md-button type=\"submit\" class=\"md-dense md-raised md-primary\">\n                  Afronden\n                </md-button>\n              </form>\n            </md-step>\n          </md-steppers>\n        </md-app-content>\n      </md-app>\n\n      <md-dialog-confirm\n        :md-active.sync=\"showDialog\"\n        md-title=\"Gelukt!\"\n        md-content=\"Bedankt voor invullen van deze module! 💖 De data is opgestuurd naar de database. 👾 Wil je de pagina herladen om een nieuwe module in te vullen? ♻️\"\n        md-confirm-text=\"Ja, herlaad\"\n        md-cancel-text=\"Nee\"\n        @md-confirm=\"onConfirm\"\n      />\n    </div>\n  </div>\n</template>\n\n<script>\nconst alphaSort = require('alpha-sort')\nconst carddb = require('./assets/cards.json') // Cardi B?\nconst moduleTypes = require('./assets/module-types.json')\nconst programPhases = require('./assets/program-phases.json')\nconst learningYears = require('./assets/learning-years.json')\nconst quarters = require('./assets/quarters.json')\nconst circles = require('./assets/circles.json')\nconst spaces = require('./assets/spaces.json')\nconst methods = require('./assets/methods.json')\nconst assessments = require('./assets/assessments.json')\nconst products = require('./assets/products.json')\nconst independenceLevels = require('./assets/independence.json')\nconst complexityLevels = require('./assets/complexity.json')\n\nconst cards = carddb\n  .filter(x => x.type === 'card')\n  .map(({id, name, strategy, image, image_width, image_height}) => ({\n    id,\n    name,\n    strategy,\n    image,\n    width: image_width,\n    height: image_height\n  }))\n\nimport {identity, noop} from 'lodash'\nimport {required, maxLength, minValue, maxValue} from 'vuelidate/lib/validators'\n\nconst apiUrl =\n  process.env.NODE_ENV === 'production'\n    ? 'https://study-guide-api.herokuapp.com'\n    : 'http://localhost:8000'\n\nexport default {\n  name: 'app',\n  components: {},\n  data: function() {\n    return {\n      showDialog: false,\n      step: 'intro',\n      language: 'nl',\n      defaultLanguage: 'nl',\n      peopleSearched: [],\n      peopleSearch: null,\n      info: {\n        name: '',\n        shortDescription: '',\n        description: '',\n        type: '',\n        phase: '',\n        quarter: [],\n        learningYear: '',\n        cluster: [],\n        credits: null\n      },\n      matter: {\n        objectivesSummary: '',\n        methods: [],\n        methodsSummary: '',\n        productsLearned: [],\n        productsAsked: [],\n        researchMethodsLearned: [],\n        researchMethodsAsked: [],\n        assessments: [],\n        assessmentsSummary: '',\n        studyMaterialsRequired: '',\n        studyMaterialsUsed: ''\n      },\n      classification: {\n        competencies: [],\n        circles: null,\n        levelComplexity: null,\n        levelIndependence: null,\n        spaces: null\n      },\n      people: {\n        coordinators: [],\n        teachers: []\n      },\n      options: {\n        person: null,\n        competency: null,\n        method: methods,\n        phase: programPhases,\n        learningYear: learningYears,\n        quarter: quarters,\n        circles: circles,\n        spaces: spaces,\n        independenceLevels: independenceLevels,\n        complexityLevels: complexityLevels,\n        type: moduleTypes,\n        cluster: null,\n        products: products,\n        cards: cards,\n        assessments: assessments\n      }\n    }\n  },\n  computed: {\n    unit() {\n      return this.info.type === 'project'\n        ? 'het project'\n        : this.info.type === 'course'\n        ? 'het vak'\n        : 'de module'\n    }\n  },\n  validations: function() {\n    const {phase, type} = this.info\n    return {\n      intro: {},\n      info: {\n        name: {required},\n        shortDescription: {required, maxLength: maxLength(240)},\n        description: {required, maxLength: maxLength(1024)},\n        type: {required},\n        phase: {required},\n        learningYear: {required},\n        quarter: {required},\n        cluster: phase === 'profiling' || phase === 'minor' ? {required} : {},\n        credits: {required, minValue: minValue(1), maxValue: maxValue(30)}\n      },\n      matter: {\n        objectivesSummary: {required, maxLength: maxLength(1024)},\n        methods: {required},\n        methodsSummary: {required, maxLength: maxLength(1024)},\n        assessments: {required},\n        assessmentsSummary: {required, maxLength: maxLength(1024)},\n        studyMaterialsRequired: {maxLength: maxLength(1024)},\n        studyMaterialsUsed: {maxLength: maxLength(1024)},\n        productsLearned: {},\n        productsAsked: {},\n        researchMethodsLearned: {required},\n        researchMethodsAsked: {required}\n      },\n      classification: {\n        competencies: {required},\n        circles: type === 'course' ? {required} : {},\n        spaces: type === 'project' ? {required} : {},\n        levelComplexity: type === 'project' ? {required} : {},\n        levelIndependence: type === 'project' ? {required} : {}\n      },\n      people: {\n        coordinators: {required},\n        teachers: {}\n      }\n    }\n  },\n  created: function() {\n    const resources = [\n      {\n        name: 'faculty',\n        map: x =>\n          x.sort((a, b) =>\n            alphaSort.asc(this.pick(a.name).value, this.pick(b.name).value)\n          )\n      },\n      {\n        name: 'program',\n        map: x =>\n          x.sort((a, b) =>\n            alphaSort.asc(this.pick(a.name).value, this.pick(b.name).value)\n          )\n      },\n      {\n        name: 'person',\n        map: x =>\n          x.filter(x => x.name).sort((a, b) => alphaSort.asc(a.name, b.name)),\n        sideEffect: x => {\n          this.peopleSearched = x\n        }\n      },\n      {name: 'competency'},\n      {\n        name: 'cluster',\n        map: x => {\n          const phaseMap = {\n            foundation: 0,\n            profiling: 1,\n            minor: 2,\n            graduation: 3\n          }\n          return x.sort(\n            (a, b) =>\n              phaseMap[b.phase] - phaseMap[a.phase] ||\n              alphaSort.asc(this.pick(a.name).value, this.pick(b.name).value)\n          )\n        }\n      }\n    ]\n\n    Promise.all(\n      resources.map(({name, map = identity, sideEffect = noop}) =>\n        fetch([apiUrl, name, ''].join('/'))\n          .then(res => res.json())\n          .then(map)\n          .then(data => {\n            this.options[name] = data\n            sideEffect(data)\n            return name\n          })\n      )\n    )\n  },\n  methods: {\n    pick(values) {\n      return attempt(this.language) || attempt(this.defaultLanguage) || null\n      function attempt(lang) {\n        return values.find(({language}) => language === lang)\n      }\n    },\n    toggle(list, value) {\n      var position = list.indexOf(value)\n      if (position === -1) {\n        list.push(value)\n      } else {\n        list.splice(position, 1)\n      }\n    },\n    searchInPeople() {\n      const list = this.options.person\n      const term = this.peopleSearch\n\n      this.peopleSearched = term\n        ? list.filter(x => x.name.toLowerCase().includes(term.toLowerCase()))\n        : list\n    },\n    next: function(ev, curr, next) {\n      ev.preventDefault()\n\n      this.$v[curr].$touch()\n\n      if (this.$v[curr].$invalid) {\n        return\n      }\n\n      if (next) {\n        this.step = next\n      } else {\n        this.submit()\n      }\n    },\n    submit: function() {\n      const uri = [apiUrl, 'module', ''].join('/')\n      const options = this.options\n      const {info, matter, classification, people} = this.$data\n\n      const body = {\n        name: [{language: 'nl', value: info.name}],\n        shortDescription: [{language: 'nl', value: info.shortDescription}],\n        description: [{language: 'nl', value: info.description}],\n        learningYears: [info.learningYear],\n        phase: info.phase,\n        type: info.type,\n        periods: info.quarter,\n        cluster: info.cluster,\n        credits: parseInt(info.credits, 10),\n        // start: null,\n        // end: null,\n        // languages: null,\n        coordinators: people.coordinators,\n        // coordinatorsSummary: null,\n        teachers: people.teachers,\n        // teachersSummary: null,\n        objectivesSummary: [\n          {language: 'nl', content: matter.objectivesSummary}\n        ],\n        methods: matter.methods.map(method => {\n          return {hoorcollege: 'lecture', werkgroep: 'lab'}[method] || method\n        }),\n        methodsSummary: [{language: 'nl', content: matter.methodsSummary}],\n        productsLearned: matter.productsLearned,\n        productsAsked: matter.productsAsked,\n        researchMethodsLearned: matter.researchMethodsLearned,\n        researchMethodsAsked: matter.researchMethodsAsked,\n        assessments: matter.assessments,\n        studyMaterialsRequired: matter.studyMaterialsRequired,\n        studyMaterialsUsed: matter.studyMaterialsUsed,\n        competencies: classification.competencies,\n        circles: classification.circles,\n        spaces: classification.spaces,\n        level:\n          classification.levelComplexity +\n          ',' +\n          classification.levelIndependence,\n        // competenciesSummary: null,\n        program: options.program[0]._id,\n        faculty: options.faculty[0]._id\n      }\n\n      fetch(uri, {\n        method: 'post',\n        headers: {'Content-Type': 'application/json; charset=utf-8'},\n        body: JSON.stringify(body)\n      }).then(() => (this.showDialog = true), () => alert('Could not send'))\n    },\n    onConfirm: function() {\n      window.location.reload()\n    }\n  }\n}\n</script>\n\n<style scoped>\n#app {\n  font-family: system-ui, serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n.md-app-container > .md-toolbar {\n  background-color: #feca2f;\n  /* Fix bug where the following app contents (the scroller), didn’t get its box painted. */\n  will-change: auto;\n}\n\n@media (min-width: 48rem) {\n  .lab-circles,\n  .lab-spaces {\n    width: 40%;\n    float: right;\n  }\n}\n\n.help {\n  font-size: small;\n}\n\n.md-field {\n  margin-top: 0;\n  margin-bottom: 3rem;\n}\n\n.md-field + .help {\n  margin-top: -2.5rem;\n  margin-bottom: 3rem;\n  margin-right: 5rem;\n  transition: transform 200ms;\n  transform: translateY(0rem);\n}\n\n.md-field.md-invalid + .help {\n  transform: translateY(1rem);\n}\n\n.md-app.md-overlap .md-app-content {\n  margin-bottom: 64px;\n  padding-left: 0;\n  padding-right: 0;\n}\n\n.lab-check-no-margin {\n  display: block;\n  margin: 0.5rem auto;\n}\n\n.lab-check-description {\n  font-size: small;\n  margin-bottom: 0.75rem;\n  padding-left: 2.25rem;\n  margin-top: -0.75rem;\n  color: rgba(0, 0, 0, 0.75);\n  cursor: pointer;\n}\n\n.lab-fake-field .help {\n  margin-bottom: 0;\n}\n\n.lab-fake-field {\n  width: 100%;\n  min-height: 48px;\n  margin: 4px 0 24px;\n  margin-bottom: 3rem;\n  padding-top: 16px;\n  position: relative;\n  font-family: inherit;\n}\n\n.lab-fake-label {\n  font-size: 16px;\n  color: rgba(0, 0, 0, 0.54);\n  font-weight: normal;\n}\n\n.lab-fake-field.md-invalid .lab-fake-label,\n.lab-fake-field.md-invalid .md-error {\n  color: #ff5252 !important;\n}\n\n.lab-check-vertical {\n  display: flex;\n}\n\n.lab-check-vertical >>> .md-checkbox-label,\n.lab-check-vertical >>> .md-radio-label {\n  display: block;\n  height: auto;\n}\n\n.lab-fake-label-required::after {\n  content: ' *';\n}\n\n.lab-fake-error {\n  color: #ff1744;\n  font-size: 12px;\n}\n\n.lab-methods {\n  /* Alright, so the space we have is (48 * 16) - 60 - 24 */\n  /* That’s the max width times the font-size, minus the stepper margins. */\n  /* So we have 684px. */\n  /* We want 3 cards next to each other, and some spacing. */\n  /* Lets say two gutters of 12px. */\n  /* Meaning we have 660px left, divided by 3, is 220px per card. */\n  margin: 0 -8px;\n}\n\n.lab-method {\n  width: 220px;\n  margin: 6px !important;\n  display: inline-block;\n  vertical-align: top;\n}\n\n.lab-method >>> .md-card-header-text p {\n  margin-top: 0;\n}\n\n.lab-method-checks {\n  padding: 16px 8px;\n}\n\n.lab-method-check {\n  margin: 0 8px;\n}\n\n.lab-method >>> .md-card-media img {\n  max-width: 10rem;\n  margin: 0 auto;\n  display: block;\n}\n\n.lab-method >>> .md-card-header {\n  padding: 8px 16px;\n}\n\n.lab-method >>> .md-title {\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 20px;\n}\n\n.lab-method-check >>> .md-checkbox-label {\n  padding-left: 8px;\n}\n\n.md-table {\n  width: 100%;\n  margin-left: -4px;\n  margin-right: -4px;\n}\n\n.md-table >>> .md-toolbar {\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n.md-table >>> .md-title {\n  margin-left: 0;\n}\n\n.md-table >>> .md-table-head-label,\n.md-table >>> .md-table-cell-container {\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n.md-table >>> .md-sortable .md-table-head-label {\n  padding-right: 32px;\n}\n\n@media (min-width: 40em) {\n  .md-table >>> .md-toolbar {\n    padding-left: 16px;\n    padding-right: 16px;\n  }\n\n  .md-table {\n    margin-left: -16px;\n    margin-right: -16px;\n  }\n\n  .md-table >>> .md-table-head-label,\n  .md-table >>> .md-table-cell-container {\n    padding-left: 16px;\n    padding-right: 16px;\n  }\n}\n\n.lab-levels {\n  margin-top: 3rem;\n}\n\n.lab-level-table {\n  empty-cells: show;\n  max-width: 100%;\n  margin: 1em 0;\n  font-size: 5px;\n}\n\n@media (min-width: 25em) {\n  .lab-level-table {\n    font-size: 8px;\n  }\n}\n\n@media (min-width: 30em) {\n  .lab-level-table {\n    font-size: 10px;\n  }\n}\n\n@media (min-width: 40em) {\n  .lab-level-table {\n    font-size: inherit;\n  }\n}\n\n.lab-level-table thead {\n  display: table-footer-group;\n}\n\n.lab-level-table :matches(th, td) {\n  padding: 1em;\n  text-align: center;\n}\n\n.lab-level-table th {\n  font-weight: normal;\n}\n\n.lab-level-table th:first-child {\n  text-align: right;\n}\n\n.lab-level-table td.foundation {\n  background-color: rgb(251, 203, 66);\n}\n.lab-level-table td.profiling {\n  background-color: rgb(168, 212, 193);\n}\n.lab-level-table td.graduation {\n  background-color: rgb(43, 157, 144);\n}\n.lab-level-table td.excel {\n  background-color: rgb(229, 100, 98);\n}\n.lab-level-table td:matches(.graduation, .excel) {\n  color: white;\n}\n\nsamp {\n  font-family: inherit;\n  font-style: italic;\n}\n\nsamp::before {\n  content: open-quote;\n  font-style: normal;\n}\n\nsamp::after {\n  content: close-quote;\n  font-style: normal;\n}\n</style>\n\n<style>\n.md-app-content,\n.md-toolbar-row {\n  max-width: 48rem;\n  margin-left: auto !important;\n  margin-right: auto !important;\n}\n\n@media (max-width: 48rem) {\n  .md-app-content {\n    border-radius: 0 !important;\n  }\n}\n\n.md-toolbar-row {\n  height: 132px;\n  vertical-align: bottom;\n}\n\n.md-toolbar-row .md-title {\n  align-self: flex-end !important;\n  margin: 1rem 0 !important;\n  color: black !important;\n  font-weight: 500 !important;\n}\n\n.md-menu-content {\n  max-width: 50rem !important;\n  margin-left: -1rem;\n}\n</style>\n","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=3a05e3e8&scoped=true&\"\nimport script from \"./App.vue?vue&type=script&lang=js&\"\nexport * from \"./App.vue?vue&type=script&lang=js&\"\nimport style0 from \"./App.vue?vue&type=style&index=0&id=3a05e3e8&scoped=true&lang=css&\"\nimport style1 from \"./App.vue?vue&type=style&index=1&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"3a05e3e8\",\n  null\n  \n)\n\ncomponent.options.__file = \"App.vue\"\nexport default component.exports","import Vue from 'vue'\nimport App from './App.vue'\nimport VueMaterial from 'vue-material'\nimport Vuelidate from 'vuelidate'\nimport 'vue-material/dist/vue-material.min.css'\nimport 'vue-material/dist/theme/default.css'\n\nVue.config.productionTip = false\n\nVue.use(VueMaterial)\nVue.use(Vuelidate)\n\nnew Vue({render: h => h(App)}).$mount('#app')\n","import mod from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&id=3a05e3e8&scoped=true&lang=css&\"; export default mod; export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&id=3a05e3e8&scoped=true&lang=css&\"","import mod from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=1&lang=css&\"; export default mod; export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=1&lang=css&\"","module.exports = __webpack_public_path__ + \"img/spaces.e8a31c10.png\";"],"sourceRoot":""}